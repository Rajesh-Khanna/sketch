{"version":3,"sources":["apps/sketch/constants.js","apps/sketch/components/sketchHost/SketchHost.jsx","apps/sketch/style.js","apps/sketch/components/gathering/index.jsx","apps/sketch/utils.js","apps/sketch/components/Palette.jsx","apps/sketch/sketchColor.js","apps/sketch/components/Board/sketchBoard.jsx","apps/sketch/components/Board/chatBoard.jsx","apps/sketch/words.js","apps/sketch/components/Board/timer.jsx","apps/sketch/components/Board/board.jsx","apps/sketch/communication/Players.js","apps/sketch/communication/ActivityManager.js","apps/sketch/index.jsx","apps/Home/home.jsx","apps/Home/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["APP_STATE","HOST","GATHERING","PASSIVE_BOARD","ACTIVE_BOARD","TERMINAL","DISCONNECTED","Object","freeze","GUEST","CLIENT","OFFER","ANSWER","HOME_PAGE_URL","DEFAULT_BACKGROUND_COLOR","META_TYPES","CHAT_TYPE","BRUSH_TYPE","SKETCH_CHANNELS","name","type","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","SketchHost","props","handleHost","onClick","gridStyle","width","textAlign","GatheringSpace","metaChannel","useRef","useState","players","setPlayers","isSessionDisconnected","setSessionDisconnect","isNameModalVisible","setNameModalVisible","nameValue","setNameValue","userType","hostLobbyKey","dataChannel","setAppState","setMyInfo","setAllPlayers","myInfo","allPlayers","getMyInfo","shareURL","setShareURL","rounds","turns","gameMeta","setGameMeta","useEffect","localStorage","getItem","console","log","window","location","protocol","host","pathname","current","getChannel","onclose","e","onmessage","message","messageObj","JSON","parse","data","keys","length","userId","send","stringify","id","p","value","i","push","sumbitName","Math","random","toString","slice","setItem","justify","class","height","x","y","fill","text-anchor","sm","md","wrap","align","flex","className","navigator","clipboard","writeText","gutter","xs","lg","min","style","ref","onChange","defaultValue","padding","state","alert","parseInt","border","map","item","index","Grid","title","visible","closable","destroyOnClose","footer","autoFocus","margin","placeholder","target","onKeyDown","key","href","currentTarget","label","37","38","39","40","preventDefault","preventDefaultForScrollKeys","keyCode","supportsPassive","addEventListener","defineProperty","get","wheelOpt","passive","wheelEvent","document","createElement","Palette","color","ColorOptions","colorS","backgroundColor","handleColor","marks","handleFont","handleUndo","handleClear","handleFillColor","span","sizeRef","max","onFontSlider","font","getRGB","canvasRef","setRGB","targetRGBA","fillBackgroundColor","contextRef","getColor","point","pixel","getImageData","copiedData","assign","pointerRGBA","hex","c","test","substring","split","join","hexToRGBA","visited","Array","j","arr","pop","putImageData","SketchBoard","setFont","setColor","fillColor","setFillColor","brush","disable","refresh","sketchBoardRef","undoHistory","prepareCanvas","canvas","innerWidth","cursor","context","getContext","fillStyle","fillRect","lineCap","lineJoin","strokeStyle","lineWidth","isDrawing","startPos","setIsDrawing","val","draw","start","end","thick","beginPath","moveTo","lineTo","stroke","closePath","startDrawing","event","nativeEvent","offsetX","offsetY","rect","getBoundingClientRect","touches","clientX","left","clientY","top","brushObj","finishDrawing","removeEventListener","mouseMove","projectPoints","clearScreen","brushMessage","isArray","forEach","floor","shift","pix","retrieveHistory","background","paddingTop","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","borderRadius","f","board","flag","ChatBoard","chat","getPlayerById","timer","messages","setMessage","prev","borderBottom","time","disabled","itemCount","itemSize","msg","row","isDisplayCloseness","isClose","paddingLeft","words","Timer","setTimer","timerFlag","clear","clearInterval","setInterval","ClockCircleOutlined","Board","useCallback","node","useHookWithRefCallback","sessionScoreColumns","dataIndex","scoreColumns","render","text","currPlayer","EditFilled","displayBlank","setDisplayBlank","blank","word","sessionScores","setSessionScores","scores","setScores","isWordModalVisible","setWordModalVisible","correctWord","isScoresVisible","setIsScoreVisible","isGameOver","setIsGameOver","roundNum","setRoundNum","wordTimeout","setTimerFlag","wordList","sketchChannel","setBrush","setChat","refreshBoard","setRefreshBoard","disableBoard","setDisableBoard","disableChat","setDisableChat","notification","useNotification","api","contextHolder","reduce","acc","score","handleSessionDisconnected","initTurn","chooseWord","clearTimeout","wordObj","obj","n","indexs","r","indexOf","idx","getNWords","setTimeout","blanks","sort","a","b","getOrderedScores","sessionScore","getSessionSortedScores","getSortedScores","info","icon","DisconnectOutlined","placement","artist","ShowBlanks","includes","wordCount","w","word_cells","columns","dataSource","pagination","fontWeight","position","destroyonClose","Player","solved","guessedTime","this","points","Players","values","player","rank","t","absoluteScore","relativeScore","artistIndex","count","scoreSum","addScore","pow","round","ActivityManager","currWord","playerIds","isGameSessionActive","turnTime","sessionDrawingQueue","sessionBrushQueue","playerPositions","isSignalEndOnStartGame","isGameActive","handleMeta","handleChat","handleBackGround","handleBrush","publish","channel_name","pollBrushQueue","myPosition","queueL","stroks","getAllPlayers","getUserById","resetScore","resetSessionScore","setGameSession","calculateScores","getScore","endObj","resetSessionScores","initiateSession","statusCheck","find","o","initObj","winnerObj","resetScores","engObj","replace","handleTimeOutVariable","handleTimeOut","guessedWord","originalWord","abs","setCurrWord","blankObj","generateBlanks","toLowerCase","addGuessedTime","resp","checkIfEveryOneSolved","isGuessedWordClose","handleNewPlayer","checkLiveness","handleStartGame","signalEnd","addPlayer","alivePlayers","heartBeat","deletePlayer","Sketch","appState","setHostLobbyKey","roomId","disconnectMessage","curr","handleGuest","lobbyKey","rtcFirebase","Guest","connectionState","isOfferReceived","setSessionState","onLobbyKey","activityManager","setSignalEndOnStartGame","RoomHost","confirmationMessage","returnValue","URLSearchParams","search","hostKey","history","pushState","newurl","path","insertParam","EmptyPage","setactivateRoom","Home","Content","Layout","showNav","setShowNav","param","queryString","getURLParam","activateRoom","toggleNav","MenuOutlined","onCancel","fontSize","float","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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ACA,UACA,YACA,YACA,YACA,YACA,YACA,SACA,QACA,SACA,UACA,cACA,SACA,OACA,MACA,MACA,QACA,UACA,YACA,UACA,SACA,MACA,SACA,QACA,WACA,QACA,QACA,YACA,MACA,QACA,OACA,aACA,gBACA,QACA,WACA,UACA,SACA,SACA,OACA,SACA,QACA,YACA,QACA,UACA,MACA,UACA,QACA,SACA,eACA,QACA,QACA,OACA,UACA,QACA,UACA,QACA,QACA,QACA,UACA,OACA,WACA,OACA,QACA,YACA,SACA,OACA,iBACA,SACA,SACA,QACA,QACA,OACA,WACA,QACA,SACA,WACA,UACA,UACA,OACA,UACA,OACA,SACA,QACA,SACA,OACA,QACA,UACA,SACA,UACA,OACA,QACA,WACA,SACA,WACA,QACA,UACA,SACA,UACA,QACA,SACA,WACA,QACA,QACA,MACA,QACA,YACA,UACA,WACA,YACA,QACA,cACA,UACA,aACA,QACA,OACA,YACA,WACA,WACA,OACA,SACA,QACA,QACA,SACA,QACA,SACA,YACA,WACA,aACA,OACA,YACA,YACA,YACA,SACA,QACA,OACA,cACA,UACA,UACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,WACA,MACA,QACA,WACA,SACA,aACA,OACA,QACA,OACA,WACA,SACA,SACA,aACA,aACA,WACA,QACA,QACA,OACA,OACA,SACA,OACA,OACA,UACA,OACA,UACA,OACA,MACA,WACA,QACA,MACA,aACA,QACA,UACA,SACA,OACA,OACA,OACA,OACA,OACA,SACA,SACA,cACA,MACA,aACA,QACA,OACA,UACA,QACA,OACA,QACA,OACA,iBACA,WACA,QACA,SACA,OACA,WACA,WACA,QACA,UACA,QACA,OACA,SACA,QACA,QACA,OACA,YACA,UACA,SACA,iBACA,aACA,QACA,QACA,SACA,SACA,MACA,QACA,WACA,UACA,MACA,OACA,SACA,QACA,MACA,YACA,QACA,cACA,OACA,aACA,QACA,OACA,QACA,SACA,UACA,UACA,WACA,QACA,SACA,YACA,OACA,cACA,YACA,OACA,SACA,QACA,MACA,MACA,OACA,WACA,WACA,WACA,OACA,UACA,UACA,OACA,UACA,WACA,MACA,OACA,QACA,UACA,SACA,SACA,WACA,WACA,QACA,aACA,UACA,WACA,SACA,OACA,OACA,QACA,SACA,QACA,WACA,OACA,WACA,SACA,QACA,WACA,WACA,OACA,UACA,WACA,aACA,YACA,WACA,QACA,SACA,SACA,OACA,WACA,OACA,SACA,OACA,YACA,UACA,MACA,YACA,UACA,WACA,QACA,gBACA,YACA,SACA,SACA,UACA,OACA,UACA,OACA,MACA,OACA,aACA,SACA,UACA,SACA,aACA,UACA,UACA,SACA,MACA,MACA,SACA,MACA,OACA,SACA,UACA,QACA,MACA,WACA,QACA,YACA,QACA,UACA,cACA,UACA,SACA,QACA,cACA,UACA,OACA,WACA,aACA,QACA,MACA,SACA,QACA,UACA,QACA,WACA,SACA,gBACA,SACA,QACA,OACA,QACA,UACA,UACA,YACA,MACA,MACA,SACA,SACA,QACA,QACA,WACA,UACA,SACA,QACA,YACA,eACA,WACA,QACA,YACA,OACA,QACA,SACA,SACA,iBACA,SACA,QACA,QACA,SACA,QACA,MACA,QACA,OACA,QACA,WACA,YACA,UACA,SACA,SACA,QACA,OACA,QACA,WACA,SACA,QACA,SACA,UACA,UACA,QACA,YACA,UACA,aACA,QACA,UACA,MACA,UACA,WACA,MACA,WACA,SACA,OACA,UACA,cACA,QACA,SACA,MACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,MACA,OACA,YACA,aACA,UACA,UACA,WACA,QACA,UACA,OACA,OACA,SACA,SACA,SACA,SACA,UACA,OACA,SACA,QACA,eACA,OACA,SACA,UACA,YACA,OACA,SACA,YACA,MACA,OACA,UACA,MACA,OACA,QACA,OACA,QACA,SACA,OACA,UACA,OACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,aACA,YACA,MACA,OACA,OACA,cACA,UACA,WACA,UACA,YACA,WACA,OACA,YACA,OACA,UACA,SACA,OACA,YACA,QACA,OACA,MACA,SACA,QACA,cACA,SACA,UACA,WACA,WACA,MACA,MACA,QACA,SACA,QACA,WACA,OACA,QACA,QACA,MACA,QACA,SACA,UACA,OACA,OACA,aACA,OACA,OACA,QACA,OACA,UACA,YACA,QACA,SACA,WACA,MACA,WACA,WACA,OACA,MACA,SACA,OACA,QACA,WACA,QACA,UACA,UACA,YACA,SACA,SACA,cACA,OACA,UACA,SACA,OACA,WACA,UACA,QACA,YACA,QACA,MACA,UACA,SACA,SACA,cACA,UACA,eACA,UACA,SACA,UACA,MACA,cACA,SACA,WACA,SACA,YACA,WACA,OACA,SACA,WACA,SACA,SACA,eACA,QACA,WACA,iBACA,QACA,UACA,OACA,SACA,UACA,WACA,aACA,QACA,OACA,SACA,aACA,YACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,MACA,MACA,YACA,kBACA,OACA,aACA,SACA,OACA,SACA,YACA,WACA,QACA,WACA,aACA,OACA,QACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,WACA,OACA,SACA,WACA,OACA,aACA,SACA,WACA,OACA,UACA,SACA,OACA,OACA,SACA,UACA,UACA,YACA,UACA,QACA,OACA,UACA,aACA,WACA,QACA,QACA,YACA,YACA,MACA,SACA,aACA,gBACA,YACA,OACA,QACA,UACA,OACA,YACA,WACA,QACA,YACA,YACA,kBACA,QACA,QACA,SACA,YACA,SACA,SACA,UACA,QACA,YACA,MACA,UACA,MACA,OACA,WACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,MACA,UACA,aACA,UACA,QACA,QACA,QACA,QACA,UACA,WACA,SACA,WACA,cACA,YACA,UACA,UACA,YACA,cACA,OACA,UACA,YACA,QACA,QACA,OACA,SACA,eACA,SACA,YACA,OACA,OACA,YACA,OACA,OACA,UACA,OACA,QACA,WACA,QACA,OACA,UACA,UACA,UACA,QACA,QACA,MACA,YACA,QACA,OACA,QACA,YACA,SACA,QACA,WACA,QACA,aACA,SACA,OACA,OACA,SACA,MACA,QACA,OACA,SACA,QACA,UACA,YACA,SACA,UACA,MACA,WACA,UACA,OACA,SACA,SACA,OACA,SACA,QACA,QACA,UACA,OACA,UACA,SACA,QACA,YACA,SACA,SACA,SACA,UACA,SACA,QACA,WACA,UACA,QACA,SACA,UACA,SACA,QACA,WACA,SACA,OACA,cACA,OACA,MACA,QACA,UACA,QACA,SACA,YACA,SACA,UACA,YACA,SACA,WACA,YACA,SACA,MACA,QACA,WACA,MACA,OACA,QACA,YACA,OACA,QACA,UACA,UACA,QACA,UACA,OACA,OACA,SACA,gBACA,iBACA,UACA,SACA,QACA,QACA,SACA,SACA,WACA,UACA,YACA,gBACA,SACA,gBACA,eACA,WACA,kBACA,UACA,wBACA,aACA,eACA,QACA,YACA,2BACA,UACA,SACA,gBACA,OACA,aACA,cACA,UACA,aACA,QACA,SACA,OACA,OACA,UACA,WACA,UACA,OACA,OACA,OACA,QACA,OACA,MACA,gBACA,WACA,UACA,aACA,OACA,SACA,UACA,WACA,OACA,OACA,WACA,UACA,UACA,MACA,WACA,WACA,aACA,QACA,YACA,YACA,QACA,SACA,WACA,SACA,aACA,MACA,SACA,SACA,QACA,UACA,MACA,UACA,YACA,QACA,SACA,OACA,OACA,WACA,YACA,QACA,MACA,SACA,MACA,UACA,OACA,WACA,UACA,OACA,YACA,YACA,OACA,aACA,SACA,WACA,aACA,SACA,YACA,WACA,SACA,OACA,UACA,QACA,SACA,WACA,SACA,gBACA,OACA,WACA,SACA,WACA,OACA,SACA,UACA,SACA,OACA,aACA,UACA,OACA,SACA,QACA,OACA,UACA,YACA,YACA,YACA,YACA,YACA,SACA,QACA,SACA,UACA,cACA,SACA,OACA,MACA,MACA,QACA,UACA,YACA,UACA,SACA,MACA,SACA,QACA,WACA,QACA,QACA,YACA,MACA,QACA,OACA,aACA,gBACA,QACA,WACA,UACA,SACA,SACA,OACA,SACA,QACA,YACA,QACA,UACA,MACA,UACA,QACA,SACA,eACA,QACA,QACA,OACA,UACA,QACA,UACA,QACA,QACA,QACA,UACA,OACA,WACA,OACA,QACA,YACA,SACA,OACA,iBACA,SACA,SACA,QACA,QACA,OACA,WACA,QACA,SACA,WACA,UACA,UACA,OACA,UACA,OACA,SACA,QACA,SACA,OACA,QACA,UACA,SACA,UACA,OACA,QACA,WACA,SACA,WACA,QACA,UACA,SACA,UACA,QACA,SACA,WACA,QACA,QACA,MACA,QACA,YACA,UACA,WACA,YACA,QACA,cACA,UACA,aACA,QACA,OACA,YACA,WACA,WACA,OACA,SACA,QACA,QACA,SACA,QACA,SACA,YACA,WACA,OACA,YACA,YACA,YACA,SACA,QACA,OACA,cACA,UACA,UACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,WACA,MACA,QACA,WACA,SACA,aACA,OACA,QACA,OACA,WACA,SACA,SACA,aACA,aACA,WACA,QACA,OACA,OACA,SACA,OACA,OACA,UACA,OACA,UACA,OACA,MACA,WACA,QACA,MACA,aACA,QACA,UACA,SACA,QACA,OACA,OACA,OACA,OACA,SACA,SACA,cACA,MACA,aACA,QACA,OACA,UACA,QACA,OACA,QACA,OACA,iBACA,WACA,QACA,SACA,OACA,WACA,WACA,QACA,UACA,QACA,OACA,SACA,QACA,QACA,OACA,YACA,UACA,SACA,iBACA,aACA,QACA,QACA,SACA,SACA,MACA,QACA,WACA,UACA,MACA,OACA,SACA,QACA,MACA,YACA,QACA,cACA,OACA,aACA,QACA,OACA,QACA,SACA,UACA,UACA,WACA,QACA,SACA,YACA,OACA,cACA,OACA,SACA,QACA,MACA,MACA,OACA,WACA,WACA,YACA,OACA,UACA,UACA,OACA,UACA,WACA,MACA,OACA,QACA,UACA,SACA,SACA,WACA,WACA,QACA,aACA,UACA,WACA,SACA,OACA,OACA,QACA,SACA,QACA,WACA,OACA,WACA,SACA,QACA,WACA,WACA,OACA,UACA,WACA,aACA,YACA,WACA,QACA,SACA,SACA,OACA,WACA,OACA,SACA,OACA,YACA,UACA,MACA,YACA,UACA,WACA,QACA,gBACA,YACA,SACA,SACA,UACA,OACA,UACA,OACA,MACA,OACA,aACA,SACA,UACA,SACA,aACA,UACA,UACA,SACA,MACA,MACA,SACA,MACA,OACA,SACA,UACA,QACA,MACA,WACA,QACA,YACA,QACA,UACA,UACA,SACA,QACA,cACA,UACA,OACA,WACA,aACA,QACA,MACA,SACA,QACA,UACA,QACA,WACA,SACA,gBACA,SACA,QACA,OACA,QACA,UACA,UACA,YACA,MACA,MACA,SACA,SACA,QACA,QACA,WACA,UACA,SACA,QACA,YACA,eACA,WACA,QACA,YACA,OACA,QACA,SACA,SACA,iBACA,SACA,QACA,QACA,SACA,QACA,MACA,QACA,OACA,QACA,WACA,YACA,UACA,SACA,SACA,QACA,OACA,QACA,WACA,SACA,QACA,SACA,UACA,UACA,QACA,YACA,UACA,aACA,QACA,UACA,MACA,UACA,WACA,MACA,WACA,SACA,OACA,UACA,cACA,QACA,SACA,MACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,MACA,OACA,YACA,aACA,UACA,UACA,WACA,QACA,UACA,OACA,OACA,SACA,SACA,SACA,SACA,UACA,OACA,SACA,QACA,eACA,OACA,SACA,UACA,YACA,OACA,SACA,YACA,MACA,OACA,UACA,OACA,OACA,QACA,OACA,QACA,SACA,OACA,UACA,OACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,aACA,YACA,MACA,OACA,OACA,cACA,UACA,WACA,UACA,YACA,WACA,OACA,YACA,OACA,UACA,SACA,OACA,YACA,QACA,OACA,MACA,SACA,cACA,SACA,UACA,WACA,WACA,MACA,MACA,QACA,SACA,QACA,WACA,OACA,QACA,QACA,MACA,QACA,SACA,UACA,OACA,OACA,aACA,OACA,OACA,QACA,OACA,UACA,YACA,QACA,SACA,WACA,MACA,WACA,WACA,OACA,MACA,SACA,OACA,QACA,WACA,QACA,UACA,UACA,YACA,SACA,SACA,cACA,OACA,UACA,SACA,OACA,WACA,UACA,QACA,YACA,QACA,MACA,UACA,SACA,SACA,cACA,UACA,eACA,UACA,SACA,UACA,MACA,cACA,SACA,WACA,SACA,YACA,WACA,OACA,SACA,WACA,SACA,SACA,eACA,QACA,WACA,iBACA,QACA,UACA,OACA,SACA,UACA,WACA,aACA,QACA,OACA,SACA,aACA,YACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,MACA,MACA,YACA,kBACA,OACA,aACA,SACA,OACA,SACA,YACA,WACA,QACA,WACA,aACA,OACA,QACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,WACA,OACA,SACA,WACA,OACA,aACA,SACA,WACA,OACA,UACA,SACA,OACA,OACA,SACA,UACA,UACA,YACA,UACA,QACA,OACA,UACA,aACA,WACA,QACA,QACA,YACA,YACA,MACA,SACA,aACA,gBACA,YACA,OACA,QACA,UACA,OACA,YACA,WACA,QACA,YACA,YACA,kBACA,QACA,QACA,SACA,YACA,SACA,SACA,UACA,QACA,YACA,MACA,UACA,MACA,OACA,WACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,MACA,UACA,aACA,UACA,QACA,QACA,QACA,QACA,UACA,WACA,SACA,WACA,cACA,YACA,UACA,UACA,YACA,cACA,OACA,UACA,YACA,QACA,QACA,OACA,SACA,eACA,SACA,YACA,OACA,OACA,YACA,OACA,OACA,UACA,OACA,QACA,WACA,QACA,OACA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","file":"static/js/main.eb6fb0e5.chunk.js","sourcesContent":["// --------------- Networking ---------------------- \nexport const CONFIGURATION = {\n    'iceServers': [{ 'urls': 'stun:172.31.23.24:3478' },\n        { 'url': 'stun:stun1.l.google.com:19302' },\n        { 'url': 'stun:stun2.l.google.com:19302' },\n        { 'url': 'stun:stun3.l.google.com:19302' },\n        { 'url': 'stun:stun4.l.google.com:19302' },\n        { 'urls': 'turn:172.31.23.24:3478' }\n    ]\n};\n\n// -------------------------------------------------\n\nexport const APP_STATE = {\n    HOST: 'HOST',\n    GATHERING: 'GATHERING',\n    PASSIVE_BOARD: 'PASSIVE_BOARD',\n    ACTIVE_BOARD: 'ACTIVE_BOARD',\n    TERMINAL: 'TERMINAL',\n    DISCONNECTED: 'DISCONNECTED',\n};\n\nObject.freeze(APP_STATE);\n\nexport const USER_TYPE = {\n    HOST: 'HOST',\n    GUEST: 'GUEST',\n};\n\nObject.freeze(USER_TYPE);\n\nexport const MESSAGE_TYPE = {\n    CLIENT: 'CLIENT',\n    OFFER: 'OFFER',\n    ANSWER: 'ANSWER',\n    GUEST: 'GUEST'\n};\n\nObject.freeze(MESSAGE_TYPE);\n\nexport const HOME_PAGE_URL = '/sketch'; // todo: change this to a valid home page url\n\nexport const LOBBY_COLLECTION = 'LOBBY_COLLECTION';\n\nexport const MAX_FONT = 80;\nexport const MIN_FONT = 1;\n\nexport const DEFAULT_BACKGROUND_COLOR = '#fff';\n\n// --------------- Meta Channel types ----------------------\nexport const META_TYPES = {\n    NEW_PLAYER: 'NEW_PLAYER',\n    PLAYERS: 'PLAYERS',\n    START_GAME: 'START_GAME',\n    END_GAME: 'END_GAME',\n    RESET_GAME: 'RESET_GAME',\n    HEART_BEAT: 'HEART_BEAT',\n    ALIVE: 'ALIVE',\n    TURN_TIME: 'TURN_TIME',\n    ROUND_NUM: 'ROUND_NUM',\n}\n\nexport const CHAT_TYPE = {\n    GUESS: 'GUESS',\n    SOLVED: 'SOLVED',\n    CLUE: 'CLUE',\n    CORRECT_WORD: 'CORRECT_WORD',\n    NEW_PLAYER: 'NEW_PLAYER',\n}\n\nexport const BRUSH_TYPE = {\n    DRAW: 'DRAW',\n    FILL: 'FILL',\n    SAVE: 'SAVE',\n    UNDO: 'UNDO',\n    CLEAR: 'CLEAR',\n}\n\nexport const POPUP_TIMEOUT = 4000;\nexport const SMALL_TIMEOUT = 1000;\n\nexport const TURN_TIME = 10;\nexport const ROUNDS = 3;\n\nexport const SKETCH_CHANNELS = [\n    { name: 'meta', type: 'data' },\n    { name: 'brush', type: 'data' },\n    { name: 'chat', type: 'data' },\n    { name: 'background', type: 'data' }\n];\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyC76AeV9WHmHfgN0dSJcMLfXOHHI09ZZDs\",\n    authDomain: \"sketch-e5889.firebaseapp.com\",\n    projectId: \"sketch-e5889\",\n    storageBucket: \"sketch-e5889.appspot.com\",\n    messagingSenderId: \"417640075335\",\n    appId: \"1:417640075335:web:d27812bbfa1a905bcea162\",\n    measurementId: \"G-2RWBX5QBR6\"\n};","import React from 'react';\nimport { Button } from 'antd';\n\nconst SketchHost = (props) => {\n    const { handleHost } = props;\n\n    return ( <> <Button type=\"primary\" onClick={handleHost}> Host Now </Button> </> );\n}\n\nexport default SketchHost;","export const gridStyle = {\n    width: '25%',\n    textAlign: 'center',\n};","import React, { useState, useRef, useEffect} from 'react';\nimport { Input, InputNumber, Button, Card, Row, Col, Modal, Divider } from 'antd';\nimport { APP_STATE, META_TYPES, ROUNDS, TURN_TIME, HOME_PAGE_URL } from '../../constants';\nimport { gridStyle } from '../../style';\n\nconst GatheringSpace = props => {\n    const metaChannel = useRef();\n    const [players, setPlayers] = useState([]);\n    const [isSessionDisconnected, setSessionDisconnect] = useState(false);\n    const [isNameModalVisible, setNameModalVisible ] = useState(false);\n    const [nameValue, setNameValue ] = useState('');\n    // eslint-disable-next-line no-unused-vars\n    const { userType, hostLobbyKey = '', dataChannel, setAppState, setMyInfo, setAllPlayers, myInfo, allPlayers, getMyInfo } = props;\n    const [ shareURL, setShareURL] = useState('');\n    const [ gameMeta, setGameMeta ] = useState({ rounds: ROUNDS, turns: TURN_TIME });\n    const turns = useRef(); \n    const rounds = useRef(); \n\n\n    const startBoard = () => {\n        console.log(turns.current.state.value);\n        if(turns.current.state.value < 30){\n            alert('Each turn should be atleast 30 secs');\n        } else if(rounds.current.state.value < 1){\n            alert('Minimum 1 round should be selected');\n        } else if(parseInt(turns.current.state.value) && parseInt(rounds.current.state.value))\n            metaChannel.current.send(JSON.stringify({type: META_TYPES.START_GAME, turns: turns.current.state.value, rounds: rounds.current.state.value }));\n        else\n            alert(\"Please check turns and rounds value\");\n    }\n\n    const handleSessionDisconnected = () => {\n        metaChannel.current.onclose = (e) => { setSessionDisconnect(true); }\n    }\n\n    useEffect(() => {\n        setNameValue(localStorage.getItem('sketchName'));\n        console.log({hostLobbyKey})\n        setShareURL(window.location.protocol + \"//\" + window.location.host + window.location.pathname + `?k=${hostLobbyKey}`);\n        metaChannel.current = dataChannel.current.getChannel('meta');\n\n        handleSessionDisconnected();\n\n        metaChannel.current.onmessage = (message) => {\n            console.log(message);\n            const messageObj = JSON.parse(message.data);\n            switch(messageObj.type){\n                case META_TYPES.PLAYERS:\n                    console.log(messageObj.players);//\n                    setPlayers(messageObj.players);\n                    setAllPlayers(messageObj.players);\n                    break;\n                case META_TYPES.START_GAME:\n                    console.log('checking my info before starting game: ', getMyInfo());\n                    if (Object.keys(getMyInfo()).length !== 0)\n                        setAppState(APP_STATE.ACTIVE_BOARD);\n                    break;\n                case META_TYPES.END_GAME:\n                    setAppState(APP_STATE.GATHERING);\n                    break;\n                case META_TYPES.HEART_BEAT:\n                    console.log({ type: META_TYPES.ALIVE, userId: getMyInfo()}) //\n                    metaChannel.current.send(JSON.stringify({ type: META_TYPES.ALIVE, userId: getMyInfo().id}));\n                    break;\n                case META_TYPES.TURN_TIME:\n                    setGameMeta(p => { return { ...p, turns: messageObj.value } });\n                    break;\n                case META_TYPES.ROUND_NUM:\n                    setGameMeta(p => { return { ...p, rounds: messageObj.value } });\n                    break;\n                default:\n                    console.log(messageObj);\n            }\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        console.log(myInfo);\n        if (!myInfo.id) {\n            setNameModalVisible(true);\n        }\n        else {\n            let keys = Object.keys(allPlayers);\n            console.log(keys);//\n            console.log(players);//\n            let p = [];\n            for (let i=0; i< keys.length; i++) {\n                console.log(allPlayers[keys[i]]);//\n                p.push({'userId':keys[i], 'name':allPlayers[keys[i]].name});\n            }\n            console.log(p)//\n            setPlayers(p);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [nameValue]);\n\n    const sumbitName = () => {\n        if(nameValue.length > 0) {\n            const id = Math.random().toString(36).slice(-6);\n            metaChannel.current.send(JSON.stringify({ type: META_TYPES.NEW_PLAYER, userId: id, name: nameValue }));\n            setMyInfo(id,nameValue);\n            localStorage.setItem('sketchName', nameValue);\n            setNameModalVisible(false);\n        }\n    }\n\n    const onTextChange = (e) => {\n        if(e.key === 'Enter'){\n            sumbitName();\n        }\n    }\n\n    const updateTurnTime = (e) => {\n        metaChannel.current.send(JSON.stringify({ type: META_TYPES.TURN_TIME, value: e }));\n    }\n\n    const updateRoundNum = (e) => {\n        metaChannel.current.send(JSON.stringify({ type: META_TYPES.ROUND_NUM, value: e }));\n    }\n\n    return (\n        <>\n            <Row justify='center'>\n                <Col>\n                    <div class=\"patterns\">\n                        <svg width=\"100%\" height=\"100%\">\n                            <defs>\n                                <style>\n                                    @import url(\"https://fonts.googleapis.com/css?  family=Lora:400,400i,700,700i\");\n                                </style>            \n                            </defs>\n                            <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#polka-dots)\"> </rect>\n                            <text x=\"50%\" y=\"60%\"  text-anchor=\"middle\"  >\n                                Sketch\n                            </text>\n                        </svg>\n                    </div>\n                    \n                </Col>\n            </Row>\n\n            <div id = 'waitingRoom'>\n                <Row justify='center'>\n                    <Col sm={24} md={16}>\n                        <Row wrap={false} justify='center' align='middle'>\n                            <Col flex=\"none\">\n                                <div className='clearBg tbGg'> Share this link </div>\n                            </Col>\n                            <Col flex=\"auto\">\n                                <div  className='clearBg tbGg'>{shareURL}</div>\n                            </Col>\n                            <Col flex=\"auto\">\n                                <Button className='clearBg tbGg' onClick={()=>{navigator.clipboard.writeText(shareURL)}}>copy</Button>\n                            </Col>\n                        </Row>\n                            <Divider> Game Settings </Divider>\n                        {\n                            userType === 'HOST'?   \n                                (\n                                    <>\n                                    <Row justify='center' gutter={[4, 4]}>\n                                        <Col xs={16} sm={16} md={16} lg={6}>\n                                            Time per turn\n                                        </Col>\n                                        <Col xs={8} sm={8} md={8} lg={4}>\n                                            <InputNumber min={30} className='ipf' style={{ textAlign: 'center' }} ref={turns} onChange={updateTurnTime} defaultValue={gameMeta.turns} type=\"number\" />\n                                        </Col>\n                                    </Row>\n                                    <Row justify='center' gutter={[4, 4]}>\n                                        <Col xs={16} sm={16} md={16} lg={6}>\n                                            Rounds\n                                        </Col>\n                                        <Col xs={8} sm={8} md={8} lg={4}>\n                                            <InputNumber min={1} className='ipf' style={{ textAlign: 'center' }} ref={rounds} onChange={updateRoundNum} defaultValue={gameMeta.rounds} type=\"number\" /> <br />\n                                        </Col>\n                                    </Row>\n                                    <Row justify='center'>\n                                        <Col md={24} lg={6}  style={{ textAlign: 'center', padding: '8px' }}>\n                                            <Button type=\"primary\" className='startButton' onClick={startBoard}> Start Game </Button>\n                                        </Col>                                    \n                                    </Row>\n                                    </>\n                                ):(\n                                    <>\n                                        <Card  className='clearBg'>\n                                            <p>\n                                                Time per turn: {gameMeta.turns}\n                                            </p>\n                                            <p>\n                                                Rounds: {gameMeta.rounds}\n                                            </p>\n                                            <p style={{ textAlign: 'center', border: 'solid' }}>\n                                                Waiting for Host to start the game.\n                                            </p>\n                                        </Card>\n                                    </>\n                                )\n                        }\n                        <Divider > Players </Divider>\n                        {\n                            players ?\n                            (\n                                <Card  className='clearBg'>\n                                    {players.map((item, index) => (\n                                        <Card.Grid style={gridStyle} key={index}>{item.name}</Card.Grid>\n                                    ))}\n                                </Card>\n                            ):(\n                                ''\n                            )\n                        }\n                    </Col>\n                </Row>\n            </div>\n            <Modal className='blob' title=\"Name\" visible={isNameModalVisible} closable={false} destroyOnClose={true} footer={null}>\n                Type your name and press ENTER <br/>\n                <Input autoFocus style={{ margin: '4px' }} placeholder='name' onChange={e => setNameValue(e.target.value)} onKeyDown={onTextChange} value={nameValue}/>\n                <br />\n                <center>\n                    <Button type='primary' onClick={sumbitName}> Submit </Button>\n                </center>\n            </Modal>\n            <Modal className='blob' title=\"Unable to Connect to Server\" visible={isSessionDisconnected} closable={false} destroyOnClose={true} footer={null}>\n                <center>\n                    <a type='primary' href={HOME_PAGE_URL}> Go To Home</a>\n                </center>\n            </Modal>\n        </>\n    );\n}\n\nexport default GatheringSpace;  ","export const getURLParam = (param) => {\n    const queryString = window.location.search;\n\n    const urlParams = new URLSearchParams(queryString);\n\n    return urlParams.get(param)\n}\n\nexport const getPathParam = () => {\n    const pathValues = window.location.pathname.split('/').filter(el => el.length !== 0);\n    console.log({ pathValues });\n    if (pathValues.length === 0) return null;\n    return pathValues[pathValues.length - 1];\n}\n\n\nexport function insertParam(key, value) {\n    if (window.history.pushState) {\n        var newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname + `?${key}=${value}`;\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n}\n\nexport function isScreenLarge() {\n    if (window.innerWidth >= 992) return true;\n    return false;\n}\n\nexport const getChannel = message => message.currentTarget.label;\n\nexport const setCanvasSize = (canvas, width, height) => {\n    const relativeHeight = parseInt(width / 2);\n    const relativeWidth = height * 2;\n\n    if (relativeHeight > height) {\n        canvas.height = height;\n        canvas.width = relativeWidth;\n    } else {\n        canvas.height = relativeHeight;\n        canvas.width = width;\n    }\n}\n\nvar keys = { 37: 1, 38: 1, 39: 1, 40: 1 };\n\nfunction preventDefault(e) {\n    e.preventDefault();\n}\n\nfunction preventDefaultForScrollKeys(e) {\n    if (keys[e.keyCode]) {\n        preventDefault(e);\n        return false;\n    }\n}\n\n// modern Chrome requires { passive: false } when adding event\nvar supportsPassive = false;\ntry {\n    window.addEventListener(\"test\", null, Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function() { supportsPassive = true; }\n    }));\n} catch (e) {}\n\nvar wheelOpt = supportsPassive ? { passive: false } : false;\nvar wheelEvent = 'onwheel' in document.createElement('div') ? 'wheel' : 'mousewheel';\n\n// call this to Disable\nexport function disableScroll() {\n    window.addEventListener('DOMMouseScroll', preventDefault, false); // older FF\n    window.addEventListener(wheelEvent, preventDefault, wheelOpt); // modern desktop\n    window.addEventListener('touchmove', preventDefault, wheelOpt); // mobile\n    window.addEventListener('keydown', preventDefaultForScrollKeys, false);\n}\n\n// call this to Enable\nexport function enableScroll() {\n    window.removeEventListener('DOMMouseScroll', preventDefault, false);\n    window.removeEventListener(wheelEvent, preventDefault, wheelOpt);\n    window.removeEventListener('touchmove', preventDefault, wheelOpt);\n    window.removeEventListener('keydown', preventDefaultForScrollKeys, false);\n}","import React from 'react';\nimport { Button, Slider, Col, Row, Tooltip } from 'antd';\n\nimport {MAX_FONT, MIN_FONT} from '../constants'\nimport { IoMdColorFill } from 'react-icons/io';\nimport { FaEraser, FaPaintBrush, FaUndo, FaTrashAlt } from 'react-icons/fa';\n\nexport default function Palette(props) {\n\n    const { color } = props;\n\n    const ColorOptions = () => {\n        const colors = [ '#000000',\n            '#464646',\n            '#787878',\n            '#b4b4b4',\n            '#dcdcdc',\n            '#ffffff',\n            '#990030',\n            '#9c5a3c',\n            '#ed1c24',\n            '#ffa3b1',\n            '#ff7e00',\n            '#e5aa7a',\n            '#ffc20e',\n            '#f5e49c',\n            '#fff200',\n            '#fff9bd',\n            '#a8e61d',\n            '#d3f9bc',\n            '#22b14c',\n            '#9dbb61',\n            '#00b7ef',\n            '#99d9ea',\n            '#4d6df3',\n            '#709ad1',\n            '#2f3699',\n            '#546d8e',\n            '#6f3198',\n            '#b5a5d5', ];\n        \n        return  colors.map(colorS => <Col> <Button className='colorButton' style={{ backgroundColor: colorS, border: (color === colorS? 'dashed' : 'none') }} onClick={ () => { props.handleColor(colorS) } } > </Button> </Col>)\n    }\n\n    const marks = {\n        [MIN_FONT]: MIN_FONT,\n        [MAX_FONT]: MAX_FONT,\n    }\n\n    return (\n        <div>\n            <Row>\n                <Col md={24} lg={12} style={{ padding: '5px' }}>\n                    <Row justify=\"space-around\">\n                        <Col>\n                            <Tooltip title = 'small'>\n                                <Button className='actionButton' onClick={ () => props.handleFont(2)}> small </Button>\n                            </Tooltip>\n                        </Col>\n                        <Col>\n                            <Tooltip title = 'medium'>\n                                <Button className='actionButton' onClick={ () => props.handleFont(25)}> md </Button>\n                            </Tooltip>\n                        </Col>\n                        <Col>\n                            <Tooltip title = 'large'>\n                                <Button className='actionButton' onClick={ () => props.handleFont(60)}> lg  </Button>\n                            </Tooltip>\n                        </Col>\n                        <Col>\n                            <Tooltip title = 'undo'>\n                                <Button className='actionButton' onClick={ () => props.handleUndo()}> <FaUndo /> </Button>\n                            </Tooltip>\n                        </Col>\n                        <Col>\n                            <Tooltip title = 'clear screen' color='red'>\n                                <Button className='actionButton' onClick={ () => props.handleClear()}> <FaTrashAlt /> </Button>\n                            </Tooltip>\n                        </Col>\n                        <Col>\n                            <Tooltip title = 'color Bucket'>\n                                <Button className='actionButton' onClick={ () => props.handleFillColor(true)}> <IoMdColorFill /> </Button>\n                            </Tooltip>\n                        </Col>\n                        <Col>\n                            <Tooltip title = 'brush'>\n                                <Button className='actionButton' onClick={ () => {props.handleColor('black'); props.handleFillColor(false)}}> <FaPaintBrush/> </Button>\n                            </Tooltip>\n                        </Col>\n                        <Col>\n                            <Tooltip title = 'eraser'>\n                                <Button className='actionButton' onClick={ () => props.handleColor('eraser')}> <FaEraser/> </Button>\n                            </Tooltip>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={24}>\n                            <Slider\n                                className='sizeSlider'\n                                marks={marks}\n                                ref={props.sizeRef}\n                                min={MIN_FONT}\n                                max={MAX_FONT}\n                                onChange={props.onFontSlider}\n                                defaultValue={10}\n                                value={props.font}\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n                <Col md={24} lg={12} style={{ padding: '5px' }}>\n                    <Row>\n                        <ColorOptions />\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n    );\n}","const getRGB = (canvasRef, data, x, y) => {\n    if (data) {\n        const index = y * (canvasRef.current.width * 4) + x * 4;\n        const rgba = `rgba(${data[index]}, ${data[index+1]}, ${data[index+2]}, ${data[index+3] / 255})`;\n        return rgba;\n    } else {\n        return 'rgba(255,255,255,1)';\n    }\n}\n\nconst setRGB = (canvasRef, data, targetRGBA, x, y) => {\n    if (data && targetRGBA) {\n        const index = y * (canvasRef.current.width * 4) + x * 4;\n\n        // console.log('previous colors: ',data[index],data[index+1],data[index+2],data[index+3]);\n        data[index] = targetRGBA[0];\n        data[index + 1] = targetRGBA[1];\n        data[index + 2] = targetRGBA[2];\n        data[index + 3] = targetRGBA[3];\n        // console.log('after colors: ',data[index],data[index+1],data[index+2],data[index+3]);    \n    }\n}\n\nconst hexToRGBA = (hex) => {\n    var c;\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n        c = hex.substring(1).split('');\n        if (c.length === 3) {\n            c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c = '0x' + c.join('');\n        return [(c >> 16) & 255, (c >> 8) & 255, c & 255, 255];\n    }\n}\n\n\nexport const fillBackgroundColor = (canvasRef, contextRef, getColor, point, color) => {\n    console.log('pointer pointed to: ', point);\n\n    var pixel = contextRef.current.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height);\n    var data = pixel.data;\n\n    let copiedData = Object.assign({}, data);\n\n    const pointerRGBA = getRGB(canvasRef, copiedData, point.x, point.y);\n    console.log('pixel color: ', pointerRGBA);\n\n    var targetRGBA = hexToRGBA(color || getColor())\n    console.log('target fill color rgba:', targetRGBA);\n\n    var visited = new Array(canvasRef.current.width);\n\n    for (var i = 0; i < visited.length; i++) {\n        visited[i] = new Array(canvasRef.current.height);\n    }\n    for (i = 0; i < visited.length; i++) {\n        for (var j = 0; j < visited[i].length; j++) {\n            visited[i][j] = 0;\n        }\n    }\n\n    let arr = [{ x: point.x, y: point.y }];\n    var p;\n    while (!(arr.length === 0)) {\n        p = arr[arr.length - 1];\n        // if(visited[p.x][p.y]===1) {\n        //     arr.pop();\n        //     continue;\n        // }\n        // console.log(p);\n        visited[p.x][p.y] = 1;\n        arr.pop();\n        if (pointerRGBA === getRGB(canvasRef, copiedData, p.x, p.y)) {\n            setRGB(canvasRef, data, targetRGBA, p.x, p.y);\n\n            if (p.x > 0 && p.y > 0 && visited[p.x - 1][p.y - 1] === 0) {\n                arr.push({ x: p.x - 1, y: p.y - 1 });\n                visited[p.x - 1][p.y - 1] = 1;\n            }\n            if (p.y > 0 && visited[p.x][p.y - 1] === 0) {\n                arr.push({ x: p.x, y: p.y - 1 });\n                visited[p.x][p.y - 1] = 1;\n            }\n            if (p.x < canvasRef.current.width - 1 && p.y > 0 && visited[p.x + 1][p.y - 1] === 0) {\n                arr.push({ x: p.x + 1, y: p.y - 1 });\n                visited[p.x + 1][p.y - 1] = 1;\n            }\n            if (p.x > 0 && visited[p.x - 1][p.y] === 0) {\n                arr.push({ x: p.x - 1, y: p.y });\n                visited[p.x - 1][p.y] = 1;\n            }\n            if (p.x < canvasRef.current.width - 1 && visited[p.x + 1][p.y] === 0) {\n                arr.push({ x: p.x + 1, y: p.y });\n                visited[p.x + 1][p.y] = 1;\n            }\n            if (p.x > 0 && p.y < canvasRef.current.height - 1 && visited[p.x - 1][p.y + 1] === 0) {\n                arr.push({ x: p.x - 1, y: p.y + 1 });\n                visited[p.x - 1][p.y + 1] = 1;\n            }\n            if (p.y < canvasRef.current.height - 1 && visited[p.x][p.y + 1] === 0) {\n                arr.push({ x: p.x, y: p.y + 1 });\n                visited[p.x][p.y + 1] = 1;\n            }\n            if (p.x < canvasRef.current.width - 1 && p.y < canvasRef.current.height - 1 && visited[p.x + 1][p.y + 1] === 0) {\n                arr.push({ x: p.x + 1, y: p.y + 1 });\n                visited[p.x + 1][p.y + 1] = 1;\n            }\n        }\n    }\n    contextRef.current.putImageData(pixel, 0, 0);\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useEffect, useRef, useState } from \"react\";\nimport { DEFAULT_BACKGROUND_COLOR, BRUSH_TYPE } from './../../constants';\nimport { isScreenLarge } from './../../utils';\n\nimport Palette from './../Palette';\nimport { fillBackgroundColor } from './../../sketchColor';\nimport { disableScroll, enableScroll } from './../../utils';\n\nexport default function SketchBoard(props) {\n\n    // font and colours\n    const [font, setFont] = useState(5);\n    const [color, setColor] = useState('#000000');\n    const [fillColor, setFillColor] = useState(false);\n    const sizeRef = useRef();\n\n    const { brush, disable, refresh, sketchBoardRef } = props;\n\n    const canvasRef = useRef(null);\n    const contextRef = useRef(null);      \n\n    const undoHistory = useRef([]);\n\n    const prepareCanvas = () => {\n      const canvas = canvasRef.current\n      const width = isScreenLarge()? window.innerWidth*5/8 : window.innerWidth - 10;\n      canvas.style.width = `${width}px`;\n      canvas.style.height = `${width/2}px`;\n      canvas.style.cursor = 'crosshair';\n\n      canvas.width = width;\n      canvas.height = width/2;\n\n      const context = canvas.getContext(\"2d\")\n      context.fillStyle = DEFAULT_BACKGROUND_COLOR;\n      context.fillRect(0, 0, canvas.width, canvas.height);\n\n      context.lineCap = \"round\";\n      context.lineJoin = 'round'\n\n      context.strokeStyle = getColor();\n      context.lineWidth = font;\n      contextRef.current = context;\n\n    };\n  \n    const isDrawing = useRef(false);\n    const startPos = useRef({});\n\n    const setIsDrawing = (val) => {\n        isDrawing.current = val;\n    }\n\n    const draw = ({ start, end, thick, color }) => {\n        contextRef.current.strokeStyle = (color || getColor()) === 'eraser'? DEFAULT_BACKGROUND_COLOR : color || getColor();\n        contextRef.current.lineWidth = thick || font;\n        contextRef.current.beginPath();\n        contextRef.current.moveTo(start.x, start.y);\n        contextRef.current.lineTo(end.x, end.y);\n        contextRef.current.stroke();\n        contextRef.current.closePath();\n    }\n\n\n    const startDrawing = (event) => {\n        // const { offsetX, offsetY } = nativeEvent;\n        const { offsetX, offsetY } = event.nativeEvent;\n        var rect = canvasRef.current.getBoundingClientRect();\n        startPos.current = {x: offsetX || event.touches[0].clientX - rect.left, y: offsetY || event.touches[0].clientY - rect.top};\n        contextRef.current.strokeStyle = getColor();\n        disableScroll();\n        setIsDrawing(true);\n        if (fillColor) {\n            fillBackgroundColor(canvasRef, contextRef, getColor, startPos.current);\n            let brushObj = {\n                type: BRUSH_TYPE.FILL,\n                data: {point: {x: startPos.current.x / canvasRef.current.width, y: startPos.current.y / canvasRef.current.height }, color: getColor() || '#ffffff'}\n            }\n            brush.send(JSON.stringify(brushObj));\n        }\n    };\n\n    const saveHistory = () => {\n        // limiting undo to 5 steps only (to save memory). Might increase it later after testing\n        if(undoHistory.current.length === 5) {\n            undoHistory.current.shift();\n        }\n        console.log('saving history...');\n        undoHistory.current.push(contextRef.current.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height));\n    }\n\n    const retrieveHistory = () => {\n        if(!(undoHistory.current.length === 0)) {\n            console.log('retrieving history...');\n            var pix = undoHistory.current[undoHistory.current.length-1];\n            undoHistory.current.pop();\n            contextRef.current.putImageData(pix,0,0);\n        }\n    }\n\n    const finishDrawing = () => {\n        enableScroll();\n        setIsDrawing(false);\n\n        // save history\n        let brushObj = {\n            type: BRUSH_TYPE.SAVE,\n        }\n        brush.send(JSON.stringify(brushObj));\n    };\n\n    const send = (start, end) => {\n        start = {x: start.x / canvasRef.current.width, y: start.y / canvasRef.current.height };\n        end = {x: end.x / canvasRef.current.width, y: end.y / canvasRef.current.height };\n        let brushObj = {\n            type: BRUSH_TYPE.DRAW,\n            data: { start, end, thick: font, color: getColor() },\n        }\n        brush.send(JSON.stringify(brushObj));\n    }\n\n    const mouseMove = (event) => {\n        if (!isDrawing.current || disable)\n            return;\n        const { offsetX, offsetY } = event.nativeEvent;\n        var rect = canvasRef.current.getBoundingClientRect();\n\n        let x,y;\n\n        if(event.touches){\n            x = offsetX || event.touches[0].clientX - rect.left;\n            y = offsetY || event.touches[0].clientY - rect.top;\n        }else{\n            x = offsetX;\n            y = offsetY;\n        }\n\n        const end = {x: x, y: y};\n        draw({ start: startPos.current, end } );\n        send(startPos.current, end);\n        startPos.current = end;\n    }\n\n    const projectPoints = (point) => {\n        let { start, end } = point;\n        start = {x: start.x * canvasRef.current.width, y: start.y * canvasRef.current.height };\n        end = {x: end.x * canvasRef.current.width, y: end.y * canvasRef.current.height };\n        return { ...point, start, end };\n    }\n\n    const clearScreen = () => {\n        contextRef.current.fillStyle = DEFAULT_BACKGROUND_COLOR;\n        contextRef.current.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    }\n\n    useEffect(() => {\n        brush.onmessage = (message) => {\n            const brushMessage = JSON.parse(message.data);\n\n            switch(brushMessage.type) {\n                case BRUSH_TYPE.DRAW:\n                    if( Array.isArray(brushMessage.data)){\n                        const points = brushMessage.data\n                        points.forEach(point => {\n                            draw(projectPoints(point));\n                        });\n                    }else{\n                        draw(projectPoints(brushMessage.data));\n                    }\n                    break;\n                case BRUSH_TYPE.FILL:\n                    fillBackgroundColor(canvasRef, contextRef, getColor, {x: Math.floor(brushMessage.data.point.x * canvasRef.current.width), y: Math.floor(brushMessage.data.point.y * canvasRef.current.height)}, brushMessage.data.color);\n                    break;\n                case BRUSH_TYPE.SAVE:\n                    saveHistory();\n                    break;\n                case BRUSH_TYPE.UNDO:\n                    retrieveHistory();\n                    break;\n                case BRUSH_TYPE.CLEAR:\n                    clearScreen();\n                    break;\n                default:\n                    console.log('unknown brush type');\n            }\n        }\n\n    }, []);\n\n    useEffect(() => {\n        console.log(sketchBoardRef);\n    }, [sketchBoardRef]);\n\n    useEffect(() => {\n        prepareCanvas();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [canvasRef]);\n    \n    useEffect(() => {\n        clearScreen();\n    }, [refresh]);\n\n    const handleFont = (f) => {\n\t\tsetFillColor(false);\n\t\tsizeRef.current.state.ref = f;\n\t\tsetFont(f);\n\t}\n\n    const onFontSlider = (e) => {\n\t\tsetFillColor(false);\n        setFont(e);\n    }\n\n    const handleColor = (c) => {\n        console.log({color: c, board: 'board'});\n        setColor(c);\n    }\n\n    const getColor = () => {\n        return color;\n    }\n\n    const handleFillColor = (flag) => {\n\t\tsetFillColor(flag);\n\t}\n\n    const handleUndo = () => {\n        let brushObj = {\n            type: BRUSH_TYPE.UNDO,\n        }\n        brush.send(JSON.stringify(brushObj));\n    }\n\n    const handleClear = () => {\n        let brushObj = {\n            type: BRUSH_TYPE.CLEAR,\n        }\n        brush.send(JSON.stringify(brushObj));\n    }\n\n    // var circleStyle = {\n    //     display:\"inline-block\",\n    //     backgroundColor: color === 'eraser'? 'white' : color,\n    //     borderRadius: color === 'eraser'? '0%' : \"50%\",\n    //     borderStyle: color === 'eraser'? 'solid': 'none',\n    //     width: font,\n    //     height: font,\n    // };\n\n    return (\n        <>\n            {/* { disable\n                ? <></>\n                :<div bordered style={{ width: font, height: font, marginLeft: '10px' , textAlign:'center', position: 'absolute'}}>\n                    <div style={circleStyle}>\n                    </div>\n                </div>\n            } */}\n            <center style={{ background: color, paddingTop: '5px' }}>\n                <canvas\n                    onMouseDown={startDrawing}\n                    onMouseUp={finishDrawing}\n                    onMouseMove={mouseMove}\n                    onTouchStart={startDrawing}\n                    onTouchEnd={finishDrawing}\n                    onTouchMove={mouseMove}\n                    ref={canvasRef}\n                    style={{ border: 'solid 2px', borderRadius: '10px' }}\n                />\n            </center>\n            { disable\n                    ? <></>\n                    : <Palette \n                        handleFont={handleFont} \n                        handleColor={handleColor} \n                        sizeRef={sizeRef} \n                        onFontSlider={onFontSlider} \n                        color={color} \n                        font={font} \n                        handleFillColor={handleFillColor} \n                        handleUndo={handleUndo} \n                        handleClear={handleClear}\n                    />\n            }\n        </>\n    );\n\n    // return <Sketch setup={setup} draw={draw} />;\n}","import React, {useEffect, useState} from 'react';\nimport { Row, Col } from 'antd';\n\nimport { VariableSizeList as List } from 'react-window';\nimport { CHAT_TYPE } from './../../constants';\n  \nconst ChatBoard = props => {\n\n    const { chat, getMyInfo, getPlayerById, disable, timer } = props;\n    const [messages, setMessage] = useState([]);\n    useEffect(() => {\n        chat.onmessage = (message) => {\n            setMessage(prev => {\n                const data = JSON.parse(message.data);\n                return [data, ...prev];\n            });\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleKeyDown = (event) => {\n        if (event.key === \"Enter\" && !disable) {\n            chat.send(JSON.stringify({type: CHAT_TYPE.GUESS, userId: getMyInfo().id, time: timer, data: event.target.value}));\n            event.target.value = '';\n        }\n    };\n\n    const MessageRow = ({ index, style }) => {\n        const name = getPlayerById(messages[index].userId).name;\n        const msg = messages[index].data\n        let row = <></>;\n        const isDisplayCloseness = messages[index].isClose & (getMyInfo().id === messages[index].userId)\n\n        if(messages[index].type === CHAT_TYPE.SOLVED){\n            row = <b style={{ color:'green' }}>{name}: GUESSED CORRECTLY</b>;\n        }\n        else if(messages[index].type === CHAT_TYPE.CORRECT_WORD){\n            row = <b style={{ color:'darkorange' }}>The Correct word is \"{msg}\"</b>;\n        }else if(messages[index].type === CHAT_TYPE.NEW_PLAYER) {\n            row = (\n                <b style={{ color:'green' }}>{name} JOINED</b>\n            )\n        }else if(isDisplayCloseness) {\n            row = (\n                    <><b>{name}: </b>{msg} <b style={{ color:'orange' }}>(is close!)</b></>\n            );\n        }else{\n            row = (<span><b>{name}: </b>{msg}</span>);\n        }\n        return <div style={{ ...style, background: index % 2? '#ddd': '#fff', paddingLeft: '5px' }}>{row}</div>\n    }\n\n    return (\n      <div className='roboto_font halfHeight' style={{border: '2px solid black'}}>\n        <Row>\n            <Col span='24'>\n                <input style={{ width: '100%', border: 'none', borderBottom: 'solid thin' }} placeholder=\"Enter to send\" onKeyDown={handleKeyDown} disabled={disable}/>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <List\n                    height={400}\n                    width={250}\n                    itemCount={messages.length}\n                    itemSize={() => 25}\n                >\n                    {MessageRow}\n                </List>\n            </Col>\n        </Row>\n      </div>\n    );\n}\n\nexport default ChatBoard;\n","const words = [\n    'goat',\n    'binoculars',\n    'anniversary',\n    'analyst',\n    'blackberry',\n    'check',\n    'cheque',\n    'cave',\n    'coil',\n    'alcohol',\n    'creature',\n    'chutney',\n    'fork',\n    'tall',\n    'cook',\n    'cliff',\n    'park',\n    'fox',\n    'train station',\n    'carnival',\n    'rainbow',\n    'background',\n    'craftsman',\n    'cart',\n    'chaise longue',\n    'botany',\n    'antennae',\n    'telegram',\n    'bell',\n    'aggression',\n    'deer',\n    'assembly',\n    'brother',\n    'arrival',\n    'egg',\n    'champion',\n    'congress',\n    'pharmacist',\n    'radio',\n    'aluminium',\n    'chopstick',\n    'ocean',\n    'bucket',\n    'civilian',\n    'autumn',\n    'cornflakes',\n    'cut',\n    'answer',\n    'bakery',\n    'board',\n    'denmark',\n    'app',\n    'college',\n    'copyright',\n    'plane',\n    'bamboo',\n    'fish',\n    'host',\n    'calendar',\n    'spaghetti',\n    'apple',\n    'tea',\n    'bottle',\n    'hen',\n    'cabinet',\n    'crew',\n    'barbeque',\n    'ireland',\n    'corn',\n    'boogeyman',\n    'collision',\n    'bull',\n    'basketball',\n    'london',\n    'chairman',\n    'battleship',\n    'cousin',\n    'headphone',\n    'alphabet',\n    'cooker',\n    'cash',\n    'circuit',\n    'mango',\n    'casino',\n    'campaign',\n    'beggar',\n    'advertisement',\n    'bulb',\n    'bus stop',\n    'garlic',\n    'football',\n    'bass',\n    'tongue',\n    'baggage',\n    'sandal',\n    'clue',\n    'copywriter',\n    'antigen',\n    'salt',\n    'forest',\n    'nurse',\n    'nose',\n    'academy',\n    'professor',\n    'astrology',\n    'breakfast',\n    'ambulance',\n    'celebrity',\n    'copper',\n    'shirt',\n    'blouse',\n    'capital',\n    'certificate',\n    'flower',\n    'beer',\n    'toy',\n    'pad',\n    'dress',\n    'burglar',\n    'classmate',\n    'atheist',\n    'cowboy',\n    'lip',\n    'soccer',\n    'coast',\n    'medicine',\n    'beast',\n    'candy',\n    'classroom',\n    'hat',\n    'cello',\n    'foot',\n    'skyscraper',\n    'communication',\n    'purse',\n    'iron man',\n    'concert',\n    'author',\n    'animal',\n    'ring',\n    'temple',\n    'model',\n    'chemistry',\n    'click',\n    'compost',\n    'cow',\n    'chicken',\n    'queen',\n    'camera',\n    'constitution',\n    'cough',\n    'crack',\n    'comb',\n    'cushion',\n    'china',\n    'caravan',\n    'sheep',\n    'pouch',\n    'cloud',\n    'bathtub',\n    'nile',\n    'daughter',\n    'crab',\n    'wrist',\n    'container',\n    'airbag',\n    'shoe',\n    'police station',\n    'waiter',\n    'tennis',\n    'arrow',\n    'curry',\n    'neck',\n    'catalyst',\n    'angle',\n    'lawyer',\n    'hospital',\n    'concept',\n    'cabbage',\n    'wolf',\n    'dresser',\n    'back',\n    'turkey',\n    'india',\n    'laptop',\n    'crop',\n    'court',\n    'buffalo',\n    'ginger',\n    'costume',\n    'cell',\n    'color',\n    'bookcase',\n    'cursor',\n    'backbone',\n    'heart',\n    'stomach',\n    'tissue',\n    'theater',\n    'rugby',\n    'basket',\n    'software',\n    'blade',\n    'ankle',\n    'man',\n    'belly',\n    'carpenter',\n    'compass',\n    'crusader',\n    'instagram',\n    'alloy',\n    'association',\n    'cupcake',\n    'television',\n    'tiger',\n    'bowl',\n    'committee',\n    'armchair',\n    'bathroom',\n    'coal',\n    'census',\n    'blank',\n    'blast',\n    'mirror',\n    'cross',\n    'canada',\n    'bookstore',\n    'business',\n    'telivision',\n    'bead',\n    'cigarette',\n    'bandwidth',\n    'clipboard',\n    'tunnel',\n    'japan',\n    'lung',\n    'cholesterol',\n    'sparrow',\n    'station',\n    'congo',\n    'actress',\n    'buffet',\n    'award',\n    'farm',\n    'air',\n    'mouth',\n    'sunglass',\n    'bee',\n    'berry',\n    'whatsapp',\n    'juicer',\n    'conference',\n    'heel',\n    'badge',\n    'calf',\n    'airplane',\n    'barium',\n    'clover',\n    'auditorium',\n    'ambassador',\n    'bungalow',\n    'train',\n    'stave',\n    'copy',\n    'bank',\n    'choker',\n    'sofa',\n    'mall',\n    'cartoon',\n    'skin',\n    'ostrich',\n    'code',\n    'oil',\n    'earphone',\n    'curse',\n    'sun',\n    'appearance',\n    'woman',\n    'adapter',\n    'butter',\n    'apro',\n    'band',\n    'pant',\n    'crib',\n    'desk',\n    'combat',\n    'jacket',\n    'grandfather',\n    'rib',\n    'centimeter',\n    'camel',\n    'bone',\n    'speaker',\n    'crowd',\n    'beef',\n    'close',\n    'boot',\n    'roller coaster',\n    'baseball',\n    'liver',\n    'jumper',\n    'ears',\n    'backyard',\n    'cleavage',\n    'cycle',\n    'charger',\n    'couch',\n    'cafe',\n    'hostel',\n    'whale',\n    'piano',\n    'bomb',\n    'newspaper',\n    'pyramid',\n    'cravat',\n    'brother in law',\n    'chimpanzee',\n    'actor',\n    'chess',\n    'cherry',\n    'police',\n    'tie',\n    'crane',\n    'carriage',\n    'cheetah',\n    'bar',\n    'curd',\n    'cashew',\n    'music',\n    'bed',\n    'commander',\n    'glove',\n    'supermarket',\n    'coin',\n    'ammunition',\n    'basin',\n    'cube',\n    'onion',\n    'cotton',\n    'painter',\n    'factory',\n    'advocate',\n    'smile',\n    'beetle',\n    'biosphere',\n    'blue',\n    'caterpillar',\n    'banquette',\n    'flag',\n    'ballot',\n    'cabin',\n    'ape',\n    'cry',\n    'lamb',\n    'birdcage',\n    'blizzard',\n    'himalaya',\n    'chip',\n    'canteen',\n    'android',\n    'horn',\n    'account',\n    'antelope',\n    'dog',\n    'pipe',\n    'clone',\n    'pumpkin',\n    'grapes',\n    'batman',\n    'cemetery',\n    'facebook',\n    'bride',\n    'sunglasses',\n    'biscuit',\n    'abortion',\n    'cinema',\n    'vase',\n    'tuna',\n    'canal',\n    'bikini',\n    'canoe',\n    'snapchat',\n    'suit',\n    'superman',\n    'singer',\n    'cheek',\n    'aircraft',\n    'birthday',\n    'oven',\n    'whisker',\n    'accident',\n    'bankruptcy',\n    'underwear',\n    'keyboard',\n    'alien',\n    'carrot',\n    'garage',\n    'hair',\n    'customer',\n    'city',\n    'kidney',\n    'belt',\n    'apartment',\n    'balance',\n    'car',\n    'alligator',\n    'legging',\n    'scissors',\n    'clerk',\n    'archaeologist',\n    'telephone',\n    'attack',\n    'couple',\n    'dentist',\n    'sand',\n    'pancake',\n    'head',\n    'son',\n    'cage',\n    'cappuccino',\n    'comedy',\n    'contact',\n    'closet',\n    'restaurant',\n    'country',\n    'freezer',\n    'estate',\n    'cop',\n    'cot',\n    'circle',\n    'boy',\n    'milk',\n    'butler',\n    'giraffe',\n    'chest',\n    'god',\n    'sandwich',\n    'paper',\n    'apparatus',\n    'dutch',\n    'teacher',\n    'attenuation',\n    'panther',\n    'museum',\n    'cable',\n    'trench coat',\n    'cottage',\n    'boat',\n    'cocktail',\n    'strawberry',\n    'glass',\n    'buy',\n    'banana',\n    'adobe',\n    'blender',\n    'nokia',\n    'kangaroo',\n    'shrimp',\n    'swimming pool',\n    'pagoda',\n    'movie',\n    'chef',\n    'voice',\n    'senator',\n    'calorie',\n    'barometer',\n    'bow',\n    'box',\n    'guitar',\n    'school',\n    'grape',\n    'brass',\n    'bookmark',\n    'surgeon',\n    'anklet',\n    'climb',\n    'cockroach',\n    'refrigerator',\n    'currency',\n    'house',\n    'courtroom',\n    'aunt',\n    'koala',\n    'candle',\n    'turtle',\n    'petrol station',\n    'bridge',\n    'short',\n    'beach',\n    'ground',\n    'coach',\n    'jaw',\n    'crest',\n    'bill',\n    'river',\n    'criminal',\n    'xylophone',\n    'everest',\n    'amazon',\n    'parrot',\n    'sport',\n    'road',\n    'audit',\n    'elephant',\n    'cattle',\n    'villa',\n    'street',\n    'century',\n    'custard',\n    'smoke',\n    'afternoon',\n    'anagram',\n    'bitterness',\n    'guest',\n    'america',\n    'bra',\n    'jewelry',\n    'pakistan',\n    'cup',\n    'cylinder',\n    'cereal',\n    'core',\n    'cobbler',\n    'grandmother',\n    'chair',\n    'letter',\n    'hut',\n    'market',\n    'blossom',\n    'cuisine',\n    'trouser',\n    'bottom',\n    'cake',\n    'cactus',\n    'age',\n    'acid',\n    'boyfriend',\n    'wheelchair',\n    'bermuda',\n    'algebra',\n    'ancestor',\n    'phone',\n    'antique',\n    'lamp',\n    'lion',\n    'finger',\n    'county',\n    'credit',\n    'donkey',\n    'balcony',\n    'gift',\n    'carpet',\n    'panda',\n    'photographer',\n    'vest',\n    'violin',\n    'athlete',\n    'badminton',\n    'gown',\n    'clutch',\n    'cranberry',\n    'ash',\n    'wing',\n    'address',\n    'bos',\n    'sink',\n    'stamp',\n    'swan',\n    'scale',\n    'father',\n    'film',\n    'captain',\n    'palm',\n    'earring',\n    'bonfire',\n    'hungry',\n    'cookie',\n    'jersey',\n    'galaxy',\n    'affair',\n    'stadium',\n    'monkey',\n    'bench',\n    'clothes',\n    'microscope',\n    'architect',\n    'cat',\n    'acre',\n    'ship',\n    'electricity',\n    'auction',\n    'designer',\n    'browser',\n    'moonlight',\n    'boundary',\n    'book',\n    'candidate',\n    'sari',\n    'village',\n    'pigeon',\n    'king',\n    'community',\n    'cocoa',\n    'door',\n    'bag',\n    'coffee',\n    'cacao',\n    'water melon',\n    'barber',\n    'curtain',\n    'shoulder',\n    'hardware',\n    'pig',\n    'kid',\n    'black',\n    'artist',\n    'crown',\n    'pharmacy',\n    'claw',\n    'crush',\n    'horse',\n    'art',\n    'brand',\n    'course',\n    'ceramic',\n    'cork',\n    'bike',\n    'atmosphere',\n    'axis',\n    'atom',\n    'waist',\n    'ball',\n    'ceiling',\n    'wild boar',\n    'spoon',\n    'mobile',\n    'aquarium',\n    'bus',\n    'audience',\n    'necklace',\n    'tail',\n    'sky',\n    'barley',\n    'frog',\n    'wound',\n    'cookware',\n    'plant',\n    'brownie',\n    'shampoo',\n    'chocolate',\n    'cancer',\n    'clinic',\n    'agriculture',\n    'blog',\n    'parfume',\n    'battle',\n    'call',\n    'cucumber',\n    'library',\n    'coral',\n    'agreement',\n    'zebra',\n    'bat',\n    'dolphin',\n    'button',\n    'wallet',\n    'gas station',\n    'company',\n    'veterinarian',\n    'blanket',\n    'bubble',\n    'monitor',\n    'pen',\n    'chairperson',\n    'mother',\n    'suitcase',\n    'orange',\n    'blueberry',\n    'cardigan',\n    'cold',\n    'cutlet',\n    'compress',\n    'family',\n    'tomato',\n    'contact lens',\n    'gauva',\n    'umbrella',\n    'authentication',\n    'shark',\n    'referee',\n    'bird',\n    'church',\n    'boolean',\n    'boutique',\n    'cheesecake',\n    'knife',\n    'seal',\n    'noodle',\n    'calculator',\n    'character',\n    'citizen',\n    'herbs',\n    'beard',\n    'bean',\n    'pencil',\n    'sketch',\n    'popcorn',\n    'fan',\n    'toe',\n    'colleague',\n    'washing machine',\n    'hand',\n    'toothbrush',\n    'banyan',\n    'teen',\n    'sister',\n    'avalanche',\n    'antibody',\n    'frock',\n    'caffeine',\n    'netherland',\n    'cane',\n    'clock',\n    'cement',\n    'thor',\n    'star',\n    'sweater',\n    'water',\n    'crayon',\n    'creator',\n    'musician',\n    'home',\n    'castle',\n    'beverage',\n    'camp',\n    'collection',\n    'russia',\n    'cinnamon',\n    'bear',\n    'balloon',\n    'collar',\n    'coke',\n    'clan',\n    'umpire',\n    'courage',\n    'butcher',\n    'continent',\n    'vehicle',\n    'lemon',\n    'clip',\n    'twitter',\n    'courthouse',\n    'broccoli',\n    'grain',\n    'truck',\n    'cathedral',\n    'broadcast',\n    'bet',\n    'chrome',\n    'toothpaste',\n    'administrator',\n    'argentina',\n    'hulk',\n    'cloth',\n    'crystal',\n    'crow',\n    'saxophone',\n    'credenza',\n    'mouse',\n    'champagne',\n    'contagion',\n    'captain america',\n    'uncle',\n    'alarm',\n    'doctor',\n    'detective',\n    'bronze',\n    'colony',\n    'caramel',\n    'bread',\n    'astronomy',\n    'bug',\n    'snowman',\n    'eye',\n    'bath',\n    'composer',\n    'chalk',\n    'campus',\n    'brown',\n    'desktop',\n    'intel',\n    'boxer',\n    'hammer',\n    'owl',\n    'slipper',\n    'breadcrumb',\n    'bicycle',\n    'cloak',\n    'album',\n    'chaos',\n    'angel',\n    'coconut',\n    'consumer',\n    'remote',\n    'notebook',\n    'cauliflower',\n    'australia',\n    'charity',\n    'airport',\n    'bartender',\n    'conditioner',\n    'soap',\n    'ashtray',\n    'blackfish',\n    'pasta',\n    'razor',\n    'baby',\n    'antler',\n    'carbohydrate',\n    'column',\n    'hamburger',\n    'bolt',\n    'coat',\n    'physician',\n    'rice',\n    'taxi',\n    'cracker',\n    'cent',\n    'cream',\n    'cupboard',\n    'child',\n    'herb',\n    'luggage',\n    'peacock',\n    'cluster',\n    'block',\n    'table',\n    'zoo',\n    'crocodile',\n    'light',\n    'sock',\n    'cynic',\n    'butterfly',\n    'bullet',\n    'fruit',\n    'governor',\n    'anime',\n    'assignment',\n    'ballet',\n    'beat',\n    'card',\n    'coffin',\n    'leg',\n    'judge',\n    'tree',\n    'rabbit',\n    'hotel',\n    'cricket',\n    'algorithm',\n    'potato',\n    'cashier',\n    'ear',\n    'bracelet',\n    'biology',\n    'club',\n    'shower',\n    'coupon',\n    'drum',\n    'nvidia',\n    'watch',\n    'noise',\n    'climate',\n    'town',\n    'current',\n    'buckle',\n    'stair',\n    'billboard',\n    'client',\n    'cuckoo',\n    'tablet',\n    'england',\n    'blazer',\n    'crash',\n    'accuracy',\n    'battery',\n    'skirt',\n    'brazil',\n    'avocado',\n    'cheese',\n    'brain',\n    'computer',\n    'france',\n    'soup',\n    'concentrate',\n    'girl',\n    'cap',\n    'blood',\n    'booklet',\n    'Apple',\n    'Amazon',\n    'Microsoft',\n    'Google',\n    'Samsung',\n    'Coca Cola',\n    'Toyota',\n    'Mercedes',\n    'McDonalds',\n    'Disney',\n    'BMW',\n    'Intel',\n    'Facebook',\n    'IBM',\n    'Nike',\n    'Cisco',\n    'Instagram',\n    'Ikea',\n    'Pepsi',\n    'YouTube',\n    'Nescafe',\n    'Tesla',\n    'Netflix',\n    'Audi',\n    'Ebay',\n    'Adidas',\n    'United States',\n    'United Kingdom',\n    'Germany',\n    'Mexico',\n    'Korea',\n    'Egypt',\n    'Africa',\n    'Avatar',\n    'Avengers',\n    'Titanic',\n    'Star Wars',\n    'The Lion King',\n    'Frozen',\n    'Black Panther',\n    'Harry Potter',\n    'Iron Man',\n    'Captain America',\n    'Aquaman',\n    'The Lord of the Rings',\n    'Spider-Man',\n    'Transformers',\n    'Joker',\n    'Toy Story',\n    'Pirates of the Caribbean',\n    'Aladdin',\n    'Pirate',\n    'Jurassic Park',\n    'goat',\n    'binoculars',\n    'anniversary',\n    'analyst',\n    'blackberry',\n    'check',\n    'cheque',\n    'cave',\n    'coil',\n    'alcohol',\n    'creature',\n    'chutney',\n    'fork',\n    'tall',\n    'cook',\n    'cliff',\n    'park',\n    'fox',\n    'train station',\n    'carnival',\n    'rainbow',\n    'background',\n    'cart',\n    'botany',\n    'antenna',\n    'telegram',\n    'bell',\n    'deer',\n    'assembly',\n    'brother',\n    'arrival',\n    'egg',\n    'champion',\n    'congress',\n    'pharmacist',\n    'radio',\n    'aluminium',\n    'chopstick',\n    'ocean',\n    'bucket',\n    'civilian',\n    'autumn',\n    'cornflakes',\n    'cut',\n    'answer',\n    'bakery',\n    'board',\n    'denmark',\n    'app',\n    'college',\n    'copyright',\n    'plane',\n    'bamboo',\n    'fish',\n    'host',\n    'calendar',\n    'spaghetti',\n    'apple',\n    'tea',\n    'bottle',\n    'hen',\n    'cabinet',\n    'crew',\n    'barbeque',\n    'ireland',\n    'corn',\n    'boogeyman',\n    'collision',\n    'bull',\n    'basketball',\n    'london',\n    'chairman',\n    'battleship',\n    'cousin',\n    'headphone',\n    'alphabet',\n    'cooker',\n    'cash',\n    'circuit',\n    'mango',\n    'casino',\n    'campaign',\n    'beggar',\n    'advertisement',\n    'bulb',\n    'bus stop',\n    'garlic',\n    'football',\n    'bass',\n    'tongue',\n    'baggage',\n    'sandal',\n    'clue',\n    'copywriter',\n    'antigen',\n    'salt',\n    'forest',\n    'nurse',\n    'nose',\n    'academy',\n    'professor',\n    'astrology',\n    'breakfast',\n    'ambulance',\n    'celebrity',\n    'copper',\n    'shirt',\n    'blouse',\n    'capital',\n    'certificate',\n    'flower',\n    'beer',\n    'toy',\n    'pad',\n    'dress',\n    'burglar',\n    'classmate',\n    'atheist',\n    'cowboy',\n    'lip',\n    'soccer',\n    'coast',\n    'medicine',\n    'beast',\n    'candy',\n    'classroom',\n    'hat',\n    'cello',\n    'foot',\n    'skyscraper',\n    'communication',\n    'purse',\n    'iron man',\n    'concert',\n    'author',\n    'animal',\n    'ring',\n    'temple',\n    'model',\n    'chemistry',\n    'click',\n    'compost',\n    'cow',\n    'chicken',\n    'queen',\n    'camera',\n    'constitution',\n    'cough',\n    'crack',\n    'comb',\n    'cushion',\n    'china',\n    'caravan',\n    'sheep',\n    'pouch',\n    'cloud',\n    'bathtub',\n    'nile',\n    'daughter',\n    'crab',\n    'wrist',\n    'container',\n    'airbag',\n    'shoe',\n    'police station',\n    'waiter',\n    'tennis',\n    'arrow',\n    'curry',\n    'neck',\n    'catalyst',\n    'angle',\n    'lawyer',\n    'hospital',\n    'concept',\n    'cabbage',\n    'wolf',\n    'dresser',\n    'back',\n    'turkey',\n    'india',\n    'laptop',\n    'crop',\n    'court',\n    'buffalo',\n    'ginger',\n    'costume',\n    'cell',\n    'color',\n    'bookcase',\n    'cursor',\n    'backbone',\n    'heart',\n    'stomach',\n    'tissue',\n    'theater',\n    'rugby',\n    'basket',\n    'software',\n    'blade',\n    'ankle',\n    'man',\n    'belly',\n    'carpenter',\n    'compass',\n    'crusader',\n    'instagram',\n    'alloy',\n    'association',\n    'cupcake',\n    'television',\n    'tiger',\n    'bowl',\n    'committee',\n    'armchair',\n    'bathroom',\n    'coal',\n    'census',\n    'blank',\n    'blast',\n    'mirror',\n    'cross',\n    'canada',\n    'bookstore',\n    'business',\n    'bead',\n    'cigarette',\n    'bandwidth',\n    'clipboard',\n    'tunnel',\n    'japan',\n    'lung',\n    'cholesterol',\n    'sparrow',\n    'station',\n    'congo',\n    'actress',\n    'buffet',\n    'award',\n    'farm',\n    'air',\n    'mouth',\n    'sunglass',\n    'bee',\n    'berry',\n    'whatsapp',\n    'juicer',\n    'conference',\n    'heel',\n    'badge',\n    'calf',\n    'airplane',\n    'barium',\n    'clover',\n    'auditorium',\n    'ambassador',\n    'bungalow',\n    'train',\n    'copy',\n    'bank',\n    'choker',\n    'sofa',\n    'mall',\n    'cartoon',\n    'skin',\n    'ostrich',\n    'code',\n    'oil',\n    'earphone',\n    'curse',\n    'sun',\n    'appearance',\n    'woman',\n    'adapter',\n    'butter',\n    'apron',\n    'band',\n    'pant',\n    'crib',\n    'desk',\n    'combat',\n    'jacket',\n    'grandfather',\n    'rib',\n    'centimeter',\n    'camel',\n    'bone',\n    'speaker',\n    'crowd',\n    'beef',\n    'close',\n    'boot',\n    'roller coaster',\n    'baseball',\n    'liver',\n    'jumper',\n    'ears',\n    'backyard',\n    'cleavage',\n    'cycle',\n    'charger',\n    'couch',\n    'cafe',\n    'hostel',\n    'whale',\n    'piano',\n    'bomb',\n    'newspaper',\n    'pyramid',\n    'cravat',\n    'brother in law',\n    'chimpanzee',\n    'actor',\n    'chess',\n    'cherry',\n    'police',\n    'tie',\n    'crane',\n    'carriage',\n    'cheetah',\n    'bar',\n    'curd',\n    'cashew',\n    'music',\n    'bed',\n    'commander',\n    'glove',\n    'supermarket',\n    'coin',\n    'ammunition',\n    'basin',\n    'cube',\n    'onion',\n    'cotton',\n    'painter',\n    'factory',\n    'advocate',\n    'smile',\n    'beetle',\n    'biosphere',\n    'blue',\n    'caterpillar',\n    'flag',\n    'ballot',\n    'cabin',\n    'ape',\n    'cry',\n    'lamb',\n    'birdcage',\n    'blizzard',\n    'himalayas',\n    'chip',\n    'canteen',\n    'android',\n    'horn',\n    'account',\n    'antelope',\n    'dog',\n    'pipe',\n    'clone',\n    'pumpkin',\n    'grapes',\n    'batman',\n    'cemetery',\n    'facebook',\n    'bride',\n    'sunglasses',\n    'biscuit',\n    'abortion',\n    'cinema',\n    'vase',\n    'tuna',\n    'canal',\n    'bikini',\n    'canoe',\n    'snapchat',\n    'suit',\n    'superman',\n    'singer',\n    'cheek',\n    'aircraft',\n    'birthday',\n    'oven',\n    'whisker',\n    'accident',\n    'bankruptcy',\n    'underwear',\n    'keyboard',\n    'alien',\n    'carrot',\n    'garage',\n    'hair',\n    'customer',\n    'city',\n    'kidney',\n    'belt',\n    'apartment',\n    'balance',\n    'car',\n    'alligator',\n    'legging',\n    'scissors',\n    'clerk',\n    'archaeologist',\n    'telephone',\n    'attack',\n    'couple',\n    'dentist',\n    'sand',\n    'pancake',\n    'head',\n    'son',\n    'cage',\n    'cappuccino',\n    'comedy',\n    'contact',\n    'closet',\n    'restaurant',\n    'country',\n    'freezer',\n    'estate',\n    'cop',\n    'cot',\n    'circle',\n    'boy',\n    'milk',\n    'butler',\n    'giraffe',\n    'chest',\n    'god',\n    'sandwich',\n    'paper',\n    'apparatus',\n    'dutch',\n    'teacher',\n    'panther',\n    'museum',\n    'cable',\n    'trench coat',\n    'cottage',\n    'boat',\n    'cocktail',\n    'strawberry',\n    'glass',\n    'buy',\n    'banana',\n    'adobe',\n    'blender',\n    'nokia',\n    'kangaroo',\n    'shrimp',\n    'swimming pool',\n    'pagoda',\n    'movie',\n    'chef',\n    'voice',\n    'senator',\n    'calorie',\n    'barometer',\n    'bow',\n    'box',\n    'guitar',\n    'school',\n    'grape',\n    'brass',\n    'bookmark',\n    'surgeon',\n    'anklet',\n    'climb',\n    'cockroach',\n    'refrigerator',\n    'currency',\n    'house',\n    'courtroom',\n    'aunt',\n    'koala',\n    'candle',\n    'turtle',\n    'petrol station',\n    'bridge',\n    'short',\n    'beach',\n    'ground',\n    'coach',\n    'jaw',\n    'crest',\n    'bill',\n    'river',\n    'criminal',\n    'xylophone',\n    'everest',\n    'amazon',\n    'parrot',\n    'sport',\n    'road',\n    'audit',\n    'elephant',\n    'cattle',\n    'villa',\n    'street',\n    'century',\n    'custard',\n    'smoke',\n    'afternoon',\n    'anagram',\n    'bitterness',\n    'guest',\n    'america',\n    'bra',\n    'jewelry',\n    'pakistan',\n    'cup',\n    'cylinder',\n    'cereal',\n    'core',\n    'cobbler',\n    'grandmother',\n    'chair',\n    'letter',\n    'hut',\n    'market',\n    'blossom',\n    'cuisine',\n    'trouser',\n    'bottom',\n    'cake',\n    'cactus',\n    'age',\n    'acid',\n    'boyfriend',\n    'wheelchair',\n    'bermuda',\n    'algebra',\n    'ancestor',\n    'phone',\n    'antique',\n    'lamp',\n    'lion',\n    'finger',\n    'county',\n    'credit',\n    'donkey',\n    'balcony',\n    'gift',\n    'carpet',\n    'panda',\n    'photographer',\n    'vest',\n    'violin',\n    'athlete',\n    'badminton',\n    'gown',\n    'clutch',\n    'cranberry',\n    'ash',\n    'wing',\n    'address',\n    'boss',\n    'sink',\n    'stamp',\n    'swan',\n    'scale',\n    'father',\n    'film',\n    'captain',\n    'palm',\n    'earring',\n    'bonfire',\n    'hungry',\n    'cookie',\n    'jersey',\n    'galaxy',\n    'affair',\n    'stadium',\n    'monkey',\n    'bench',\n    'clothes',\n    'microscope',\n    'architect',\n    'cat',\n    'acre',\n    'ship',\n    'electricity',\n    'auction',\n    'designer',\n    'browser',\n    'moonlight',\n    'boundary',\n    'book',\n    'candidate',\n    'sari',\n    'village',\n    'pigeon',\n    'king',\n    'community',\n    'cocoa',\n    'door',\n    'bag',\n    'coffee',\n    'water melon',\n    'barber',\n    'curtain',\n    'shoulder',\n    'hardware',\n    'pig',\n    'kid',\n    'black',\n    'artist',\n    'crown',\n    'pharmacy',\n    'claw',\n    'crush',\n    'horse',\n    'art',\n    'brand',\n    'course',\n    'ceramic',\n    'cork',\n    'bike',\n    'atmosphere',\n    'axis',\n    'atom',\n    'waist',\n    'ball',\n    'ceiling',\n    'wild boar',\n    'spoon',\n    'mobile',\n    'aquarium',\n    'bus',\n    'audience',\n    'necklace',\n    'tail',\n    'sky',\n    'barley',\n    'frog',\n    'wound',\n    'cookware',\n    'plant',\n    'brownie',\n    'shampoo',\n    'chocolate',\n    'cancer',\n    'clinic',\n    'agriculture',\n    'blog',\n    'parfume',\n    'battle',\n    'call',\n    'cucumber',\n    'library',\n    'coral',\n    'agreement',\n    'zebra',\n    'bat',\n    'dolphin',\n    'button',\n    'wallet',\n    'gas station',\n    'company',\n    'veterinarian',\n    'blanket',\n    'bubble',\n    'monitor',\n    'pen',\n    'chairperson',\n    'mother',\n    'suitcase',\n    'orange',\n    'blueberry',\n    'cardigan',\n    'cold',\n    'cutlet',\n    'compress',\n    'family',\n    'tomato',\n    'contact lens',\n    'gauva',\n    'umbrella',\n    'authentication',\n    'shark',\n    'referee',\n    'bird',\n    'church',\n    'boolean',\n    'boutique',\n    'cheesecake',\n    'knife',\n    'seal',\n    'noodle',\n    'calculator',\n    'character',\n    'citizen',\n    'herbs',\n    'beard',\n    'bean',\n    'pencil',\n    'sketch',\n    'popcorn',\n    'fan',\n    'toe',\n    'colleague',\n    'washing machine',\n    'hand',\n    'toothbrush',\n    'banyan',\n    'teen',\n    'sister',\n    'avalanche',\n    'antibody',\n    'frock',\n    'caffeine',\n    'netherland',\n    'cane',\n    'clock',\n    'cement',\n    'thor',\n    'star',\n    'sweater',\n    'water',\n    'crayon',\n    'creator',\n    'musician',\n    'home',\n    'castle',\n    'beverage',\n    'camp',\n    'collection',\n    'russia',\n    'cinnamon',\n    'bear',\n    'balloon',\n    'collar',\n    'coke',\n    'clan',\n    'umpire',\n    'courage',\n    'butcher',\n    'continent',\n    'vehicle',\n    'lemon',\n    'clip',\n    'twitter',\n    'courthouse',\n    'broccoli',\n    'grain',\n    'truck',\n    'cathedral',\n    'broadcast',\n    'bet',\n    'chrome',\n    'toothpaste',\n    'administrator',\n    'argentina',\n    'hulk',\n    'cloth',\n    'crystal',\n    'crow',\n    'saxophone',\n    'credenza',\n    'mouse',\n    'champagne',\n    'contagion',\n    'captain america',\n    'uncle',\n    'alarm',\n    'doctor',\n    'detective',\n    'bronze',\n    'colony',\n    'caramel',\n    'bread',\n    'astronomy',\n    'bug',\n    'snowman',\n    'eye',\n    'bath',\n    'composer',\n    'chalk',\n    'campus',\n    'brown',\n    'desktop',\n    'intel',\n    'boxer',\n    'hammer',\n    'owl',\n    'slipper',\n    'breadcrumb',\n    'bicycle',\n    'cloak',\n    'album',\n    'chaos',\n    'angel',\n    'coconut',\n    'consumer',\n    'remote',\n    'notebook',\n    'cauliflower',\n    'australia',\n    'charity',\n    'airport',\n    'bartender',\n    'conditioner',\n    'soap',\n    'ashtray',\n    'blackfish',\n    'pasta',\n    'razor',\n    'baby',\n    'antler',\n    'carbohydrate',\n    'column',\n    'hamburger',\n    'bolt',\n    'coat',\n    'physician',\n    'rice',\n    'taxi',\n    'cracker',\n    'cent',\n    'cream',\n    'cupboard',\n    'child',\n    'herb',\n    'luggage',\n    'peacock',\n    'cluster',\n    'block',\n    'table',\n    'zoo',\n    'crocodile',\n    'light',\n    'sock',\n    'cynic',\n    'butterfly',\n    'bullet',\n    'fruit',\n    'governor',\n    'anime',\n    'assignment',\n    'ballet',\n    'beat',\n    'card',\n    'coffin',\n    'leg',\n    'judge',\n    'tree',\n    'rabbit',\n    'hotel',\n    'cricket',\n    'algorithm',\n    'potato',\n    'cashier',\n    'ear',\n    'bracelet',\n    'biology',\n    'club',\n    'shower',\n    'coupon',\n    'drum',\n    'nvidia',\n    'watch',\n    'noise',\n    'climate',\n    'town',\n    'current',\n    'buckle',\n    'stair',\n    'billboard',\n    'client',\n    'cuckoo',\n    'tablet',\n    'england',\n    'blazer',\n    'crash',\n    'accuracy',\n    'battery',\n    'skirt',\n    'brazil',\n    'avocado',\n    'cheese',\n    'brain',\n    'computer',\n    'france',\n    'soup',\n    'concentrate',\n    'girl',\n    'cap',\n    'blood',\n    'booklet',\n]\n\nexport const getNWords = (n) => {\n    var indexs = [];\n    while (indexs.length < n) {\n        var r = Math.floor(Math.random() * words.length);\n        if (indexs.indexOf(r) === -1) indexs.push(r);\n    }\n    return indexs.map(idx => words[idx])\n}","import React, {useEffect, useRef} from 'react';\nimport { ClockCircleOutlined } from '@ant-design/icons';\n\nconst Timer = (props) => {\n    const id = useRef(null);\n    const { timer, setTimer, timerFlag } = props;\n\n    const clear = () => {\n        window.clearInterval(id.current);\n    }\n\n    useEffect(() => {\n        id.current = window.setInterval(() => {\n            if(timer >0)\n                setTimer((time)=>time-1)\n        },1000)\n        return ()=>clear();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [timerFlag]);\n\n    useEffect(() => {\n        if (timer <= 0) {\n            clear();\n        }\n    }, [timer]);\n\n    return (\n        <div className=\"Timer\">\n            <div style={{ paddingLeft: '4px' }}><ClockCircleOutlined /> {timer} sec </div>\n        </div>\n    );\n}\n\nexport default Timer;","import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport SketchBoard from './sketchBoard';\nimport ChatBoard from './chatBoard';\nimport {getNWords} from '../../words';\nimport Timer from './timer';\nimport { Table, Row, Col, Modal, Button, notification } from 'antd';\n\n\nimport { HOME_PAGE_URL} from '../../constants';\nimport { EditFilled, DisconnectOutlined } from '@ant-design/icons';\n\nfunction useHookWithRefCallback() {\n  const ref = useRef(null)\n  const setRef = useCallback(node => {\n    if (ref.current) {\n      console.log({'ref.current': ref.current});\n      // Make sure to cleanup any events/references added to the last instance\n    }\n    \n    if (node) {\n      console.log({node});\n      // Check if a node is actually passed. Otherwise node would be null.\n      // You can now do what you need to, addEventListeners, measure, etc.\n    }\n    \n    // Save a reference to the node\n    ref.current = node\n  }, [])\n  \n  return [setRef]\n}\n\nconst Board = props => {\n    const [sketchBoardRef] = useHookWithRefCallback();\n\n    const sessionScoreColumns = useRef([\n      {\n        title: 'Player',\n        dataIndex: 'name',\n      },\n      {\n        title: 'Score',\n        dataIndex: 'sessionScore',\n      },\n    ]);\n\n    const scoreColumns = useRef([\n      {\n        title: 'Player',\n        dataIndex: 'userId',\n        props:{ className:'clearBg' },\n        render: (text, row, index) => {\n          if (text === currPlayer.current) {\n            return (\n              <>\n                <b>{getPlayerById(text).name}</b>\n                <EditFilled /> \n              </>\n            );\n          }\n          return <span>{getPlayerById(text).name}</span>;\n        },\n      },\n      {\n        title: 'Score',\n        dataIndex: 'score',\n        props:{ className:'clearBg' }\n      },\n    ]);\n    const [displayBlank, setDisplayBlank] = useState(false);\n    const blank = useRef('');\n    const word = useRef('');\n    const [sessionScores, setSessionScores] = useState();\n    const [scores, setScores] = useState();\n    const [isWordModalVisible, setWordModalVisible ] = useState(false);\n    const correctWord = useRef('');\n    const [isScoresVisible, setIsScoreVisible] = useState(false);\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [roundNum, setRoundNum] = useState(1);\n    const currPlayer = useRef('');\n    const wordTimeout = useRef();\n\n\n    const [timer, setTimer] = useState(0);\n    const [timerFlag, setTimerFlag] = useState(0);\n    const wordList = useRef(['','','']);\n    const background = useRef();\n\n    const { sketchChannel, getMyInfo, getPlayerById, allPlayers } = props;\n    const [ brush, setBrush ] = useState();\n    const [ chat, setChat ] = useState();\n    const [refreshBoard, setRefreshBoard] = useState(false);\n    const [isSessionDisconnected, setSessionDisconnect] = useState(false);\n\n    // eslint-disable-next-line no-unused-vars\n    const [ disableBoard, setDisableBoard ] = useState(true);\n    // eslint-disable-next-line no-unused-vars\n    const [ disableChat, setDisableChat ] = useState(false);\n\n    const [api, contextHolder] = notification.useNotification();\n\n    const openNotification = id => {\n      api.info({\n        icon: <DisconnectOutlined />,\n        message: `Payer ${getPlayerById(id).name} got Disconnected`,\n        placement: 'topLeft',\n      });\n    };\n\n    useEffect(() => {\n      console.log(allPlayers);\n      setScores(Object.keys(allPlayers).reduce((acc,id) => {\n        return [ ...acc, { userId: id, score: 0 } ];\n      }, []));\n      setBrush(sketchChannel.current.getChannel('brush'));\n      setChat(sketchChannel.current.getChannel('chat'));\n      background.current = sketchChannel.current.getChannel('background');\n\n      handleSessionDisconnected();\n\n      initTurn();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleSessionDisconnected = () => {\n      background.current.onclose = (e) => { setSessionDisconnect(true); }\n    }\n\n    const chooseWord = (index) => {\n      clearTimeout(wordTimeout.current);\n      console.log(wordList.current[index]);//\n      word.current = wordList.current[index];\n      let wordObj = {\n        \"type\": \"SELECTED_WORD\",\n        \"word\": wordList.current[index]\n      };\n      background.current.send(JSON.stringify(wordObj));\n      setWordModalVisible(false);\n    }\n\n    const getSessionSortedScores = (sessionScores) => {\n      return sessionScores.sort((a,b) => {\n          return b.sessionScore - a.sessionScore;\n      });\n    }\n\n    const getSortedScores = (scores) => {\n        return scores.sort((a,b) => {\n            return b.score - a.score;\n        });\n    }\n\n    const getOrderedScores = (scores) => {\n      return scores.sort((a,b) => {\n          return b.index - a.index;\n      });\n    }\n\n    const initTurn = () => {\n      console.log('initTurn');//\n\n      background.current.onmessage = (message) => {\n        console.log('message received');//\n        let obj = JSON.parse(message.data);\n        switch (obj.type) {\n          case \"INIT_TURN\":\n            setRefreshBoard(false);\n\n            setIsScoreVisible(false);\n            setTimer(obj.timer);\n            setRoundNum(obj.roundNum);\n            const myInfo = getMyInfo();\n            currPlayer.current = myInfo.id;\n            if (myInfo.id === obj.userId) {\n              setDisableBoard(false);\n              setDisableChat(true);\n\n              wordList.current = getNWords(3);\n              setWordModalVisible(true);\n              wordTimeout.current = setTimeout(() => {\n                if(word.current === '') {\n                  chooseWord(Math.floor(Math.random() * (3)));\n                }\n              }, 10000);\n            }\n            else {\n              currPlayer.current = obj.userId;\n              setDisableBoard(true);\n              setDisableChat(false);\n            }\n            break;\n\n          case \"BLANKS\":\n            if (word.current === '') {\n              blank.current = obj.blanks;\n            }\n            else {\n              blank.current = word.current;\n            }\n            setDisplayBlank(true);\n\n            setTimerFlag((timerFlag) => timerFlag+1)\n            break;\n\n          case \"END_TURN\":\n            console.log(\"testing end turn\");//\n            console.log(obj.scores);//\n            setRefreshBoard(true);\n            setScores(getOrderedScores(obj.scores));\n            setSessionScores(getSessionSortedScores(obj.scores));\n            setDisplayBlank(false);\n            word.current = '';\n            blank.current = '';\n            correctWord.current = obj.correctWord;\n            setIsScoreVisible(true);\n            console.log(sessionScores);//\n            break;\n\n          case \"WINNER\":\n            currPlayer.current = '';\n            setScores(getSortedScores(obj.scores));\n            setIsScoreVisible(false);\n            setIsGameOver(true);\n            break;\n\n          case \"DISCONNECTED\":\n            openNotification(obj.id);\n            setScores(obj.scores);\n            break;\n\n          case \"SCORE\":\n            console.log(obj);\n            /**\n             * Used to give necessary context to the new player joined\n             * in between game (also updates player list everywhere)\n             */\n            currPlayer.current = obj.artist;\n            setScores(obj.scores);\n            break;\n          default:\n            console.log('unkown type: ' + obj.type);\n        }  \n      }\n    }\n\n  const ShowBlanks = () => {\n    if(blank.current.includes('_')){\n      const words = blank.current.split(' ');\n      const wordCount = words.map(w => w.length);\n      const word_cells = blank.current.split('').map((w) => {\n        if(w === ' ')\n          return <span className='emptyCell'> </span>;\n        return <span className='wordCell'> </span>\n      });\n  \n      return (\n        <Row align='middle' justify='center'>\n          <Col>\n            {word_cells}\n          </Col>\n          <Col>\n          <span style={{ paddingLeft: '10px' }}>\n            {wordCount.join('-')}\n          </span>\n          </Col>\n        </Row>\n      );\n    }\n    return blank.current;\n  }\n\n  return (\n    <>\n      {contextHolder}\n      <div>Round: {roundNum}</div>\n      <Row justify='center'>\n        <Col lg={4} className='fullHeight'>\n          <Table className='clearBg' columns={scoreColumns.current} dataSource={scores} pagination={false}/>\n        </Col>\n\n        <Col lg={16}>\n          {\n            brush \n              ? <>\n                  {\n                    displayBlank? \n                      <Row style={{background:'white', margin: '4px'}}  align=\"middle\">\n                        <Col span={4}>\n                          <Timer timer={timer} setTimer={setTimer} timerFlag={timerFlag}/>\n                        </Col>\n                        <Col span={20}>\n                          <div  style={{ fontWeight: 'bold', textAlign: 'center', padding: '4px'}}> <ShowBlanks /> </div>\n                        </Col>\n                      </Row>\n                      : <></>\n                  }\n                  <div style={{ position: 'relative' }}>\n                    <SketchBoard  \n                      ref = {sketchBoardRef} \n                      sketchBoardRef={sketchBoardRef} \n                      brush = {brush} \n                      disable={disableBoard} \n                      refresh={refreshBoard}\n                    />\n                  </div>\n                </>\n              : <></>\n          }\n        </Col>\n        <Col lg={4} xs={24}>\n          {\n            chat\n              ? <ChatBoard chat = {chat} getPlayerById={getPlayerById} getMyInfo={getMyInfo} disable={disableChat} timer={timer}/>\n              : <></>\n          }\n        </Col>\n      </Row>\n      <Modal className='blob' title=\"Choose Word\" visible={isWordModalVisible} closable={false} destroyOnClose={true} footer={null}>\n        <Button type=\"text\" onClick={() => chooseWord(0)}>{wordList.current[0]}</Button>\n        <Button type=\"text\" onClick={() => chooseWord(1)}>{wordList.current[1]}</Button>\n        <Button type=\"text\" onClick={() => chooseWord(2)}>{wordList.current[2]}</Button>\n      </Modal>\n      <Modal className='blob' title=\"Scores\" visible={isScoresVisible} closable={false} destroyonClose={true} footer={null}>\n        <center>\n          <h3> Word is: <b> {correctWord.current} </b> </h3>\n        </center>\n        <Table columns={sessionScoreColumns.current} dataSource={sessionScores} pagination={false}/>\n      </Modal>\n      <Modal className='blob' title=\"Leader Board\" visible={isGameOver} closable={false} destroyonClose={true} footer={null}>\n        <Table columns={scoreColumns.current} dataSource={scores} pagination={false}/>\n      </Modal>\n      <Modal className='blob' title=\"Unable to Connect to Server\" visible={isSessionDisconnected} closable={false} destroyonClose={true} footer={null}>\n        <center>\n          <a type='primary' href={HOME_PAGE_URL}> Go To Home</a>\n        </center>\n      </Modal>\n    </>\n    );\n}\n\nexport default Board;","class Player {\n\n    id = 'player-id';\n\n    name = 'Player';\n\n    sessionScore = 0;\n\n    score = 0;\n\n    solved = false;\n\n    guessedTime = 0;\n\n    constructor(id, name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    resetSessionScore() {\n        this.sessionScore = 0;\n        this.solved = false;\n        this.guessedTime = 0;\n    }\n\n    resetScore() {\n        this.score = 0;\n        this.sessionScore = 0;\n        this.solved = false;\n        this.guessedTime = 0;\n    }\n\n    addScore(points) {\n        this.score += points;\n        this.sessionScore = points;\n        this.solved = true;\n    }\n\n    addGuessedTime(time) {\n        this.guessedTime = time;\n        this.solved = true;\n    }\n}\n\nexport class Players {\n\n    players = {}\n\n    addPlayer(id, name) {\n        this.players[id] = new Player(id, name);\n    }\n\n    getScore() {\n        return Object.values(this.players)\n            .map((player, index) => {\n                return {\n                    name: player.name,\n                    userId: player.id,\n                    sessionScore: player.sessionScore,\n                    score: player.score,\n                    rank: index,\n                };\n            });\n    }\n\n    getAllPlayers() {\n        return Object.values(this.players)\n            .map((player, index) => {\n                return {\n                    userId: player.id,\n                    name: player.name\n                };\n            });\n    }\n\n    getUserById(id) {\n        return this.players[id];\n    }\n\n    deletePlayer(id) {\n        delete this.players[id];\n    }\n\n    /** player -> 400 (formula) + 100 bonus (100/no.of players guessed)\n     *  artist -> 200 ((200/playerCount) * no. of players guessed) + 300 bonus (3*(sum of each player formula score)/(4*(playerCount)) )\n     *  considering avg as 60% so that the cubic equation will be strictly increasing with time (avg => at 60% of time, score will be half(200))\n    */\n    calculateScores(artist) {\n        console.log(artist);\n        let p = Object.values(this.players);\n        let i = 0, count = 0;\n\n        let a = 1, b = 165, c = 234;\n        let t, absoluteScore, relativeScore, artistIndex, scoreSum = 0, score;\n\n        for(i = 0; i < p.length; i++) {\n            if (p[i].id === artist) {\n                artistIndex = i;\n                continue;\n            }\n            if (p[i].guessedTime !== 0) {\n                count++;\n            } \n        }\n\n        for(i = 0; i < p.length; i++) {\n            if (p[i].id === artist) {\n                continue;\n            }\n            if (count === 0) {\n                p[i].addScore(0);\n            } else {\n                t = p[i].guessedTime;\n                if (t === 0) {\n                    absoluteScore = 0;\n                    relativeScore = 0;\n                } else {\n                    absoluteScore = a*Math.pow(t,3) + b*Math.pow(t,2) + c*t;\n                    relativeScore = 100/(count);\n                }\n                score = Math.min(Math.round(absoluteScore+relativeScore), 500);\n                scoreSum += score;\n                p[i].addScore(Math.max(score,0));\n            }\n        }\n\n        //Artist score\n\n        if(!artist || artist==='') return;\n        if (count === 0) {\n            p[artistIndex].addScore(0);\n        } else {\n            absoluteScore = (200/(p.length-1))*count;\n            relativeScore = 3*(scoreSum/(4*(p.length-1)));\n\n            score = Math.min(Math.round(absoluteScore+relativeScore), 500);\n            console.log(score);\n            p[artistIndex].addScore(Math.max(score,0));\n        }\n    }\n}","import { Players } from './Players';\nimport { META_TYPES, POPUP_TIMEOUT, SMALL_TIMEOUT, TURN_TIME, ROUNDS } from '../constants';\nimport { getChannel } from '../utils';\nimport { CHAT_TYPE } from './../constants';\n\n// all game logic goes here\nexport class ActivityManager {\n\n    publish;\n\n    players = new Players();\n\n    currWord = 'CORRECT';\n\n    playerIds = [];\n\n    roundNum = 0;\n\n    isGameSessionActive = false;\n\n    turnTime = TURN_TIME;\n\n    rounds = ROUNDS;\n\n    handleTimeOutVariable;\n\n    alivePlayers;\n\n    sessionDrawingQueue = [];\n\n    sessionBrushQueue = {};\n\n    playerPositions = {};\n\n    isSignalEndOnStartGame = true;\n\n    signalEnd;\n\n    isGameActive = false;\n\n    artist;\n\n    // constructor() {\n    //     setInterval( () => {if(this.publish) this.checkHeartBeat();}, 1000)\n    // }\n\n    setSignalEndOnStartGame(flag) {\n        this.isSignalEndOnStartGame = flag;\n    }\n\n    setGameSession(flag) {\n        this.isGameSessionActive = flag;\n    }\n\n    setCurrWord(word) {\n        this.currWord = word;\n        console.log(this.currWord); //\n    }\n\n    handle(message) {\n        switch (getChannel(message)) {\n            case 'meta':\n                this.handleMeta(message);\n                break;\n            case 'chat':\n                this.handleChat(message);\n                break;\n            case 'background':\n                this.handleBackGround(message);\n                break;\n            case 'brush':\n                this.handleBrush(message);\n                break;\n            default:\n                this.publish(message);\n        }\n    }\n\n    addBoardcastChannel(channel_name, dataChannel) {\n        if (!(channel_name in this.sessionBrushQueue)) {\n            this.sessionBrushQueue[channel_name] = [];\n        }\n        this.pollBrushQueue(channel_name, dataChannel);\n    }\n\n    pollBrushQueue(channel_name, dataChannel) {\n        let myPosition = 0;\n        setTimeout(() => {\n            const queueL = this.sessionBrushQueue[channel_name].length;\n            const stroks = this.sessionBrushQueue[channel_name].slice(myPosition, queueL);\n            if (stroks.length > 0) {\n                myPosition = queueL;\n                dataChannel.send(JSON.stringify(stroks));\n            }\n        }, 100);\n    }\n\n    resetScores() {\n        let allPlayers = this.players.getAllPlayers();\n        for (let i = 0; i < allPlayers.length; i++) {\n            this.players.getUserById(allPlayers[i].userId).resetScore();\n        }\n    }\n\n    resetSessionScores() {\n        let allPlayers = this.players.getAllPlayers();\n        for (let i = 0; i < allPlayers.length; i++) {\n            this.players.getUserById(allPlayers[i].userId).resetSessionScore();\n        }\n    }\n\n    handleTimeOut() {\n        console.log('hello'); //\n        this.setGameSession(false);\n\n        this.players.calculateScores(this.artist);\n        this.artist = '';\n\n        console.log(this.players.getScore());\n\n        this.sessionBrushQueue['brush'] = [];\n        this.sessionDrawingQueue = [];\n\n        const correctWord = {\n            \"type\": \"CORRECT_WORD\",\n            \"data\": this.currWord\n        };\n        this.publish({ data: JSON.stringify(correctWord) }, 'chat');\n\n        // send scores\n        let endObj = {\n            \"type\": \"END_TURN\",\n            \"scores\": this.players.getScore(),\n            \"correctWord\": this.currWord\n        };\n        this.publish({ data: JSON.stringify(endObj) }, 'background');\n        this.resetSessionScores();\n\n        setTimeout(() => {\n            this.initiateSession();\n        }, POPUP_TIMEOUT);\n    }\n\n    initiateSession() {\n        if (this.playerIds.length === 0) {\n            if (this.roundNum < this.rounds) {\n                this.playerIds = this.players.getAllPlayers();\n                console.log(this.playerIds); //\n                this.roundNum = this.roundNum + 1;\n            }\n        }\n\n        if (this.playerIds.length) {\n            const userId = this.playerIds[this.playerIds.length - 1].userId;\n            console.log(userId);\n            const statusCheck = this.players.getAllPlayers().find(o => o.userId === userId);\n            console.log(statusCheck);\n            if (!statusCheck) {\n                this.playerIds.pop();\n                this.initiateSession();\n                return;\n            }\n            /** timeout is added so that users get the time to check the scores\n             * Note: Initially(when the page loads for the first time), it might happen that host sends the message\n             * before guests start listening. Adding time out also mitigates this issue.\n             */\n            setTimeout(() => {\n                this.artist = userId;\n                this.sessionDrawingQueue = [];\n                console.log('message sent'); //\n                let initObj = {\n                    \"type\": \"INIT_TURN\",\n                    \"userId\": userId,\n                    \"roundNum\": this.roundNum,\n                    \"timer\": this.turnTime,\n                    \"rounds\": this.rounds\n                };\n                this.publish({ data: JSON.stringify(initObj) }, 'background');\n            }, SMALL_TIMEOUT);\n            this.playerIds.pop();\n        } else {\n            // Game over logic\n            let winnerObj = {\n                \"type\": \"WINNER\",\n                \"scores\": this.players.getScore()\n            }\n            this.publish({ data: JSON.stringify(winnerObj) }, 'background');\n\n            this.resetScores();\n            this.roundNum = 0;\n            let engObj = {\n                \"type\": \"END_GAME\"\n            };\n            setTimeout(() => {\n                this.publish({ data: JSON.stringify(engObj) }, 'meta');\n                this.isGameActive = false;\n            }, POPUP_TIMEOUT);\n        }\n    }\n\n    generateBlanks(word) {\n        return word.replace(/([a-zA-Z])/g, \"_\");\n    }\n\n    checkIfEveryOneSolved() {\n        let allPlayers = this.players.getAllPlayers();\n        let count = allPlayers.length;\n        for (let i = 0; i < allPlayers.length; i++) {\n            if (this.players.getUserById(allPlayers[i].userId).solved === true) {\n                count = count - 1;\n            }\n        }\n        if (count === 1) {\n            clearTimeout(this.handleTimeOutVariable);\n            this.handleTimeOut();\n        }\n    }\n\n    isGuessedWordClose(guessedWord, originalWord) {\n        if (Math.abs(guessedWord.length - originalWord.length) > 1) {\n            return false;\n        }\n        let count = 0;\n        if (guessedWord.length !== originalWord.length) count = 1;\n        for (let i = 0; i < Math.min(guessedWord.length, originalWord.length); i++) {\n            if (guessedWord[i] !== originalWord[i]) {\n                count++;\n            }\n            if (count > 1) return false;\n        }\n        return true;\n    }\n\n    handleBrush(message) {\n        this.sessionDrawingQueue.push(message);\n        this.publish(message);\n    }\n\n    handleBackGround(message) {\n        const data = JSON.parse(message.data);\n\n        if (data.type === \"SELECTED_WORD\") {\n            this.setCurrWord(data.word);\n            this.setGameSession(true);\n\n            let blanks = this.generateBlanks(data.word);\n\n            let blankObj = {\n                \"type\": \"BLANKS\",\n                \"blanks\": blanks\n            };\n            this.publish({ data: JSON.stringify(blankObj) }, 'background');\n            this.handleTimeOutVariable = setTimeout(() => {\n                this.handleTimeOut();\n            }, (this.turnTime) * 1000);\n        } else {\n            this.publish(message);\n        }\n    }\n\n    handleChat(message) {\n        const data = JSON.parse(message.data);\n        if (this.players.getUserById(data.userId).solved || !data.data)\n            return;\n\n        if ((data.data.toLowerCase() === this.currWord.toLowerCase()) && (this.isGameSessionActive)) {\n            this.players.getUserById(data.userId).addGuessedTime(data.time/this.turnTime);\n            const resp = {\n                userId: data.userId,\n                type: CHAT_TYPE.SOLVED,\n            };\n            this.publish({ data: JSON.stringify(resp) }, getChannel(message));\n            this.checkIfEveryOneSolved();\n        } else {\n            if(this.isGuessedWordClose(data.data.toLowerCase(), this.currWord.toLowerCase())) {\n                data.isClose = true;\n            } else {\n                data.isClose = false;\n            }\n            this.publish({data: JSON.stringify(data)}, getChannel(message))\n        }\n    }\n\n    handleMeta(message) {\n        const data = JSON.parse(message.data);\n        switch (data.type) {\n            case META_TYPES.NEW_PLAYER:\n                this.handleNewPlayer(message);\n                break;\n            case META_TYPES.ALIVE:\n                this.checkLiveness(message);\n                break;\n            case META_TYPES.TURN_TIME:\n                this.turnTime = JSON.parse(message.data).value;\n                this.publish(message);\n                break;\n            case META_TYPES.ROUND_NUM:\n                this.rounds = JSON.parse(message.data).value;\n                this.publish(message);\n                break;\n            case META_TYPES.START_GAME:\n                this.handleStartGame(message);\n                // eslint-disable-next-line no-fallthrough\n            default:\n                this.publish(message)\n        }\n    }\n\n    handleStartGame(message) {\n        const data = JSON.parse(message.data);\n        this.turnTime = data.turns;\n        this.rounds = data.rounds;\n        this.isGameActive = true;\n\n        this.initiateSession();\n\n        if(this.isSignalEndOnStartGame) {\n            this.signalEnd();\n        }\n    }\n\n    handleNewPlayer(message) {\n        const data = JSON.parse(message.data);\n        this.players.addPlayer(data.userId, data.name);\n        const resp = {\n            type: META_TYPES.PLAYERS,\n            players: this.players.getAllPlayers(),\n        }\n        this.publish({ data: JSON.stringify(resp) }, getChannel(message));\n\n        this.publish({ data: JSON.stringify({type: META_TYPES.TURN_TIME, value: this.turnTime}) }, getChannel(message));\n        this.publish({ data: JSON.stringify({type: META_TYPES.ROUND_NUM, value: this.rounds}) }, getChannel(message));\n\n        // If player joins in between game\n        if (this.isGameActive) {\n            this.publish({ data: JSON.stringify({type: META_TYPES.START_GAME, turns: this.turnTime, rounds: this.rounds }) }, 'meta');\n            setTimeout(() => {\n                this.publish({ data: JSON.stringify({type: \"SCORE\", scores: this.players.getScore(), artist: this.artist }) }, 'background');\n                this.publish({ data: JSON.stringify({ type: CHAT_TYPE.NEW_PLAYER, userId: data.userId, data:'' }) }, 'chat');\n                // for (var i = 0; i < this.sessionDrawingQueue.length; i++) {\n                //     this.publish(this.sessionDrawingQueue[i]);\n                // }\n            }, SMALL_TIMEOUT);\n        }\n\n    }\n\n    checkHeartBeat() {\n        this.alivePlayers = [];\n        let heartBeat = {\n            type: META_TYPES.HEART_BEAT,\n        }\n        this.publish({ data: JSON.stringify(heartBeat) }, 'meta');\n\n        setTimeout(() => {\n            let allPlayers = this.players.getAllPlayers();\n            console.log(this.alivePlayers);\n            for (let i = 0; i < allPlayers.length; i++) {\n                // console.log(allPlayers[i]);\n                if (!this.alivePlayers.includes(allPlayers[i].userId)) {\n                    console.log(allPlayers[i].userId);\n                    this.players.deletePlayer(allPlayers[i].userId);\n                    this.publish({ data: JSON.stringify({ type: 'DISCONNECTED', id: allPlayers[i].userId, scores: this.players.getScore() }) }, 'background');\n                    if (this.artist === allPlayers[i].userId) {\n                        clearTimeout(this.handleTimeOutVariable);\n                        this.artist = '';\n                        this.resetSessionScores();\n                        this.handleTimeOut();\n                    }\n                    console.log(this.players.getAllPlayers());\n                }\n            }\n            // whenever a player disconnects updated players list will be sent to everyone\n            const resp = {\n                type: META_TYPES.PLAYERS,\n                players: this.players.getAllPlayers(),\n            }\n            this.publish({ data: JSON.stringify(resp) }, 'meta');\n        }, 3000);\n    }\n\n    checkLiveness(message) {\n        console.log(message); //\n        const data = JSON.parse(message.data);\n        console.log(data); //\n        console.log('alive player: ', data.userId); //\n        this.alivePlayers.push(data.userId);\n    }\n}","import React, {useEffect, useRef, useState} from 'react';\nimport { Modal, Row, Col } from 'antd';\n\nimport { APP_STATE, SKETCH_CHANNELS, firebaseConfig, HOME_PAGE_URL } from './constants';\n\n// componenets\nimport SketchHost from './components/sketchHost/SketchHost';\nimport GatheringSpace from './components/gathering/index';\nimport Board from './components/Board/board';\nimport rtcFirebase from 'webrtc-firebase';\n// utils\nimport { insertParam } from './utils';\n// import sketchSync from './comms/sketchChannels';\n// import { sketchChannelHandler, messageChannelHandler } from './comms/channels';\n\n// import { Host, Guest } from './communication/HG';\nimport { ActivityManager } from './communication/ActivityManager';\n\nconst Sketch = () => {\n    const dataChannel = useRef();\n    const myInfo = useRef({});\n    const allPlayers = useRef({});\n    // eslint-disable-next-line no-unused-vars\n    const [appState, setAppState] = useState(); \n    const [hostLobbyKey, setHostLobbyKey] = useState(null);\n    const [isSessionDisconnected, setSessionDisconnect] = useState(false);\n    const roomId = useRef('');\n    const userType = useRef('');\n    const disconnectMessage = useRef('Unable to Connect to Server, Try Refreshing the page');\n    \n    const setRoomId = (id) => {\n        roomId.current = id;\n    }\n\n    const setAllPlayers = (data) => {\n        allPlayers.current = data.reduce((acc, curr) => {\n            return { [curr.userId]: { name: curr.name }, ...acc };\n        }, {});\n    } \n\n    const getPlayerById = (id) => {\n        return allPlayers.current[id] || { name: 'MISSING' };\n    }\n \n    const setMyInfo = (id, name) => {\n        myInfo.current = { id, name };\n    }\n\n    const getMyInfo = () => myInfo.current;\n\n    const setSessionState = (connectionState, isOfferReceived) => {\n        console.log(connectionState, isOfferReceived);\n        if (connectionState === 'failed') {\n            if(isOfferReceived === false) {\n                disconnectMessage.current = \"You are trying to connect to an inactive game, please recheck the url\"\n            }\n            else {\n                disconnectMessage.current = \"Sorry, A technical issue from our side, please reload the page\"\n            }\n            setSessionDisconnect(true);\n            setAppState(APP_STATE.DISCONNECTED);\n        } else if(connectionState === 'unknown') {\n            setSessionDisconnect(true);\n            setAppState(APP_STATE.DISCONNECTED);\n        }\n    };\n\n    const handleGuest = (lobbyKey) => {\n        // write guest setup logic\n        dataChannel.current = new rtcFirebase.Guest(lobbyKey, firebaseConfig, SKETCH_CHANNELS , () => {\n            console.log('APP_STATE.GATHERING');\n            setAppState(APP_STATE.GATHERING);\n        }, (connectionState, isOfferReceived) => {setSessionState(connectionState, isOfferReceived)});\n        userType.current = 'GUEST';\n    }\n\n    const handleHost = (onLobbyKey) => {\n        // write hosting logic\n        const activityManager = new ActivityManager();\n        activityManager.setSignalEndOnStartGame(false);\n        dataChannel.current = new rtcFirebase.RoomHost(onLobbyKey, firebaseConfig, SKETCH_CHANNELS, activityManager);\n        userType.current = 'HOST';\n        setAppState(APP_STATE.GATHERING);\n    }\n\n    // useEffects\n    useEffect(() => {\n        window.addEventListener(\"beforeunload\", function (e) {\n            var confirmationMessage = 'You will be disconnected from current session if you leave the page';\n        \n            (e || window.event).returnValue = confirmationMessage; //Gecko + IE\n            return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\n        });\n\n        const urlParams = new URLSearchParams(window.location.search);\n        const lobbyKey = urlParams.get('k');\n        console.log(lobbyKey);\n        if(lobbyKey){\n            setRoomId(lobbyKey);\n            handleGuest(lobbyKey);\n            setHostLobbyKey(lobbyKey);\n        }\n        else{\n            handleHost((hostKey) => {\n                insertParam('k', hostKey);\n                setHostLobbyKey(hostKey);\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (<>\n        {(() => {\n                switch(appState) { \n                    case APP_STATE.HOST: \n                        console.log('host state');\n                        return <SketchHost handleHost = {handleHost}/> \n                    case APP_STATE.GATHERING:\n                        console.log('gathering state');\n                        return <GatheringSpace \n                                    hostLobbyKey={hostLobbyKey} \n                                    userType={userType.current} \n                                    dataChannel={dataChannel} \n                                    setAppState={setAppState}\n                                    setMyInfo={setMyInfo}\n                                    setAllPlayers={setAllPlayers}\n                                    myInfo={myInfo.current}\n                                    allPlayers={allPlayers.current}\n                                    getMyInfo={getMyInfo}\n                                />\n                    case APP_STATE.DISCONNECTED:\n                        console.log('disconnected state');\n                        return (\n                            <Modal className='blob' title={disconnectMessage.current} visible={isSessionDisconnected} closable={false} destroyOnClose={true} footer={null}>\n                                <center>\n                                    <a type='primary' href={HOME_PAGE_URL}> Go To Home</a>\n                                </center>\n                            </Modal>\n                        );\n                    case APP_STATE.PASSIVE_BOARD:\n                        console.log('passive state');\n                        return <></>\n                    case APP_STATE.ACTIVE_BOARD:\n                        console.log('active state');\n                        return <Board sketchChannel={dataChannel} getMyInfo={getMyInfo} getPlayerById={getPlayerById} allPlayers={allPlayers.current} />;\n                    case APP_STATE.TERMINAL:\n                        console.log('terminal state');\n                        return <></>;\n                    default:\n                        console.log('default state');\n                        return (\n                            <Row justify='center'>\n                                <Col>\n                                <section id=\"global\">\n\n                                    <div id=\"top\" class=\"mask\">\n                                    <div class=\"plane\"></div>\n                                    </div>\n                                    <div id=\"middle\" class=\"mask\">\n                                    <div class=\"plane\"></div>\n                                    </div>\n\n                                    <div id=\"bottom\" class=\"mask\">\n                                    <div class=\"plane\"></div>\n                                    </div>\n                                    <p id=\"connectingText\" ><i>CONNECTING...</i></p>\n\n                                    </section>\n                                </Col>\n                            </Row>\n                        );\n                }\n            })()}\n        </>);\n}\n\nexport default Sketch;\n","import React from 'react';\nimport { Row, Col } from 'antd';\n\nconst EmptyPage = ({setactivateRoom}) => {\n\n    const createRoom = () => {\n        setactivateRoom(true);\n    }\n\n    return (\n        <div>\n            <Row justify='center'>\n                <Col>\n                    <div class=\"patterns\">\n                        <svg width=\"100%\" height=\"100%\">\n                            <defs>\n                                <style>\n                                    @import url(\"https://fonts.googleapis.com/css?  family=Lora:400,400i,700,700i\");\n                                </style>            \n                            </defs>\n                            <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#polka-dots)\"> </rect>\n                            <text x=\"50%\" y=\"40%\"  text-anchor=\"middle\"  >\n                                Sketch\n                            </text>\n                        </svg>\n                    </div>\n                    \n                </Col>\n            </Row>\n            <Row justify='center'>\n                <Col className='rooms-container'>\n                    <button className='room-buttons' onClick={createRoom}> Create Room </button>\n                </Col>\n            </Row>\n            <Row justify='center'>\n                <Col className='introText' sm={24} md={16} lg={8}>\n                    <center><h3>How to play?</h3></center>\n                    <p>\n                        Click on create room and a link will be generated. Share that link with your friends for them to join this room, and you can start the game when everyone joined.\n                    </p>\n                    <h3>Rules of the game</h3>\n                    <ul>\n                        <li>Its a simple game of pictionary</li>\n                        <li>The drawer will be given a word which he has to convey to his friends by drawing</li>\n                        <li>The faster other players guess the word from the drawing greater the points that they get</li>\n                        <li>In this fashion each player will get an chance to draw per round</li>\n                        <li>Finally who ever has the highest score wins</li>\n                    </ul>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default EmptyPage;","import React, {useState} from 'react';\nimport Sketch from './../sketch/index';\nimport { Button, Layout, Modal, Divider } from 'antd';\nimport { MenuOutlined } from '@ant-design/icons';\nimport { HOME_PAGE_URL } from './../sketch/constants';\nimport '../../background.scss';\nimport EmptyPage from './home';\nimport { getURLParam } from './../sketch/utils';\n\nconst Home = () => {\n\n    const { Content } = Layout;\n    const [showNav, setShowNav] = useState(false);\n    const [activateRoom, setactivateRoom] = useState(getURLParam('k'));\n\n    const toggleNav = () => {\n        setShowNav(p => !p);\n    }\n    \n    console.log('Home page');\n\n    return (\n        <>\n            <div class=\"area\" >\n                <ul class=\"circles\">\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                </ul>\n            </div >\n\n            <Layout className='gradientBg fullHeight'>\n                <Content className='fullHeight' style={{ padding: '8px', height: '100%' }}>\n                    <div style={{ background: 'none', height: '50px', paddingLeft: '50px' }}>\n                        <Button onClick={toggleNav}>\n                            <MenuOutlined />\n                        </Button>\n                    </div>\n                    { \n                        activateRoom?\n                            (<Sketch className='sketch' />)\n                            :(<EmptyPage setactivateRoom={setactivateRoom}/>)\n                    }\n                    <Modal className='blob' title={null} visible={showNav} onCancel={toggleNav} destroyOnClose={true} footer={\n                        <span style={{ fontSize: '15px' }}>This app is built by <a href=\"https://github.com/Rajesh-Khanna\">@Rajesh</a> and <a href=\"https://github.com/theVirtualMan\">@Rohit</a></span>\n                    }>\n                        <h3 style={{ float: 'right' }}>\n                            <a className='navElement' href={HOME_PAGE_URL}> Home</a>\n                            <a className='navElement' href={HOME_PAGE_URL}> other game</a>\n                        </h3>\n                        <Divider />\n                        <p>\n                            <h3> Hi </h3>\n                            This is an online game where you guess what other people are drawing. One can easily understand how to play the game even as a beginner. <br />\n                            Since this is peer to peer game, To get the best experience of the game it's always good that hosted person should have a better internet connectivity and a well equipped device.\n                            <br />\n                            If you enjoyed our game, Buy me coffee here , though I am more of a tea guy.\n                            <br />\n                        </p>\n                    </Modal>\n                </Content>\n            </Layout>\n        </>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport Home from './apps/Home/index';\n\nconst App = () => (\n  <div className=\"App\">\n    <Home />\n  </div>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className='styleFont' />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}